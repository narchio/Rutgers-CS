
bomb:     file format elf32-i386
bomb
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08048980

Program Header:
    PHDR off    0x00000034 vaddr 0x08048034 paddr 0x08048034 align 2**2
         filesz 0x00000120 memsz 0x00000120 flags r-x
  INTERP off    0x00000154 vaddr 0x08048154 paddr 0x08048154 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x08048000 paddr 0x08048000 align 2**12
         filesz 0x00003694 memsz 0x00003694 flags r-x
    LOAD off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**12
         filesz 0x000008b8 memsz 0x00000f88 flags rw-
 DYNAMIC off    0x00003f14 vaddr 0x0804cf14 paddr 0x0804cf14 align 2**2
         filesz 0x000000e8 memsz 0x000000e8 flags rw-
    NOTE off    0x00000168 vaddr 0x08048168 paddr 0x08048168 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x00002c24 vaddr 0x0804ac24 paddr 0x0804ac24 align 2**2
         filesz 0x0000011c memsz 0x0000011c flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**0
         filesz 0x000000f8 memsz 0x000000f8 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x08048760
  FINI                 0x0804a224
  INIT_ARRAY           0x0804cf08
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x0804cf0c
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x080481ac
  STRTAB               0x0804840c
  SYMTAB               0x080481dc
  STRSZ                0x00000195
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x0804d000
  PLTRELSZ             0x000000e8
  PLTREL               0x00000011
  JMPREL               0x08048678
  REL                  0x08048658
  RELSZ                0x00000020
  RELENT               0x00000008
  VERNEED              0x080485e8
  VERNEEDNUM           0x00000001
  VERSYM               0x080485a2

Version References:
  required from libc.so.6:
    0x0d696913 0x00 07 GLIBC_2.3
    0x0d696911 0x00 06 GLIBC_2.1
    0x0d696917 0x00 05 GLIBC_2.7
    0x09691974 0x00 04 GLIBC_2.3.4
    0x0d696914 0x00 03 GLIBC_2.4
    0x0d696910 0x00 02 GLIBC_2.0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  08048154  08048154  00000154  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  08048168  08048168  00000168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  08048188  08048188  00000188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000030  080481ac  080481ac  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000230  080481dc  080481dc  000001dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000195  0804840c  0804840c  0000040c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000046  080485a2  080485a2  000005a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000070  080485e8  080485e8  000005e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000020  08048658  08048658  00000658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      000000e8  08048678  08048678  00000678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000023  08048760  08048760  00000760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          000001e0  08048790  08048790  00000790  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  08048970  08048970  00000970  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000018a2  08048980  08048980  00000980  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000014  0804a224  0804a224  00002224  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       000009e1  0804a240  0804a240  00002240  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000011c  0804ac24  0804ac24  00002c24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000954  0804ad40  0804ad40  00002d40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  0804cf08  0804cf08  00003f08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  0804cf0c  0804cf0c  00003f0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .jcr          00000004  0804cf10  0804cf10  00003f10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .dynamic      000000e8  0804cf14  0804cf14  00003f14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got          00000004  0804cffc  0804cffc  00003ffc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got.plt      00000080  0804d000  0804d000  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000740  0804d080  0804d080  00004080  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          000006d0  0804d7c0  0804d7c0  000047c0  2**5
                  ALLOC
 26 .comment      00000035  00000000  00000000  000047c0  2**0
                  CONTENTS, READONLY
 27 .debug_aranges 00000020  00000000  00000000  000047f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_info   00000857  00000000  00000000  00004815  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_abbrev 00000194  00000000  00000000  0000506c  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_line   0000016a  00000000  00000000  00005200  2**0
                  CONTENTS, READONLY, DEBUGGING
 31 .debug_str    00000323  00000000  00000000  0000536a  2**0
                  CONTENTS, READONLY, DEBUGGING
 32 .debug_loc    000001cd  00000000  00000000  0000568d  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08048154 l    d  .interp	00000000              .interp
08048168 l    d  .note.ABI-tag	00000000              .note.ABI-tag
08048188 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
080481ac l    d  .gnu.hash	00000000              .gnu.hash
080481dc l    d  .dynsym	00000000              .dynsym
0804840c l    d  .dynstr	00000000              .dynstr
080485a2 l    d  .gnu.version	00000000              .gnu.version
080485e8 l    d  .gnu.version_r	00000000              .gnu.version_r
08048658 l    d  .rel.dyn	00000000              .rel.dyn
08048678 l    d  .rel.plt	00000000              .rel.plt
08048760 l    d  .init	00000000              .init
08048790 l    d  .plt	00000000              .plt
08048970 l    d  .plt.got	00000000              .plt.got
08048980 l    d  .text	00000000              .text
0804a224 l    d  .fini	00000000              .fini
0804a240 l    d  .rodata	00000000              .rodata
0804ac24 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
0804ad40 l    d  .eh_frame	00000000              .eh_frame
0804cf08 l    d  .init_array	00000000              .init_array
0804cf0c l    d  .fini_array	00000000              .fini_array
0804cf10 l    d  .jcr	00000000              .jcr
0804cf14 l    d  .dynamic	00000000              .dynamic
0804cffc l    d  .got	00000000              .got
0804d000 l    d  .got.plt	00000000              .got.plt
0804d080 l    d  .data	00000000              .data
0804d7c0 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    d  .debug_aranges	00000000              .debug_aranges
00000000 l    d  .debug_info	00000000              .debug_info
00000000 l    d  .debug_abbrev	00000000              .debug_abbrev
00000000 l    d  .debug_line	00000000              .debug_line
00000000 l    d  .debug_str	00000000              .debug_str
00000000 l    d  .debug_loc	00000000              .debug_loc
00000000 l    df *ABS*	00000000              crtstuff.c
0804cf10 l     O .jcr	00000000              __JCR_LIST__
080489c0 l     F .text	00000000              deregister_tm_clones
080489f0 l     F .text	00000000              register_tm_clones
08048a30 l     F .text	00000000              __do_global_dtors_aux
0804d7e8 l     O .bss	00000001              completed.7209
0804cf0c l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
08048a50 l     F .text	00000000              frame_dummy
0804cf08 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              bomb.c
00000000 l    df *ABS*	00000000              phases.c
0804a460 l     O .rodata	00000040              array.3266
00000000 l    df *ABS*	00000000              support.c
08049174 l     F .text	0000005a              sig_handler
00000000 l    df *ABS*	00000000              driverlib.c
08049690 l     F .text	000000d4              rio_readlineb
00000000 l    df *ABS*	00000000              crtstuff.c
0804b690 l     O .eh_frame	00000000              __FRAME_END__
0804cf10 l     O .jcr	00000000              __JCR_END__
00000000 l    df *ABS*	00000000              
0804cf0c l       .init_array	00000000              __init_array_end
0804cf14 l     O .dynamic	00000000              _DYNAMIC
0804cf08 l       .init_array	00000000              __init_array_start
0804ac24 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
0804d000 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
0804a220 g     F .text	00000002              __libc_csu_fini
08049399 g     F .text	00000045              skip
08049637 g     F .text	00000036              phase_defused
0804d0c4 g     O .data	0000000c              n31
00000000       F *UND*	00000000              read@@GLIBC_2.0
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
080489b0 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
0804d080  w      .data	00000000              data_start
0804d800 g     O .bss	00000640              input_strings
00000000       F *UND*	00000000              fflush@@GLIBC_2.0
0804d0dc g     O .data	0000000c              n33
0804d7c0 g     O .bss	00000004              stderr@@GLIBC_2.0
00000000       F *UND*	00000000              fgets@@GLIBC_2.0
0804d7c0 g       .data	00000000              _edata
00000000       F *UND*	00000000              signal@@GLIBC_2.0
00000000       F *UND*	00000000              sleep@@GLIBC_2.0
0804d118 g     O .data	0000000c              n44
0804d130 g     O .data	0000000c              n46
0804d100 g     O .data	0000000c              n42
0804d148 g     O .data	0000000c              n48
0804a224 g     F .fini	00000000              _fini
00000000       F *UND*	00000000              alarm@@GLIBC_2.0
00000000       F *UND*	00000000              __stack_chk_fail@@GLIBC_2.4
0804d7ec g     O .bss	00000004              num_input_strings
08048d90 g     F .text	0000016b              phase_5
0804935f g     F .text	00000002              initialize_bomb_solve
08048fb0 g     F .text	00000048              phase_7
08049361 g     F .text	00000038              blank_line
0804912f g     F .text	00000045              phase_9
08049764 g     F .text	000007ca              submitr
08048caa g     F .text	0000007b              phase_3
08048c2d g     F .text	0000005c              phase_1
080491ce g     F .text	0000001f              invalid_phase
08049f63 g     F .text	000001d2              init_driver
00000000       F *UND*	00000000              strcpy@@GLIBC_2.0
0804d16c g     O .data	0000000c              node3
080494c6 g     F .text	0000003d              explode_bomb
00000000       F *UND*	00000000              gethostname@@GLIBC_2.0
0804d154 g     O .data	0000000c              node1
00000000       F *UND*	00000000              getenv@@GLIBC_2.0
00000000       F *UND*	00000000              malloc@@GLIBC_2.0
0804d080 g       .data	00000000              __data_start
00000000       F *UND*	00000000              puts@@GLIBC_2.0
0804d184 g     O .data	0000000c              node5
00000000       F *UND*	00000000              __memmove_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              __gmon_start__
00000000       F *UND*	00000000              exit@@GLIBC_2.0
0804d084 g     O .data	00000000              .hidden __dso_handle
080490de g     F .text	00000051              fun9
0804a244 g     O .rodata	00000004              _IO_stdin_used
0804d0b8 g     O .data	0000000c              n22
0804d5c0 g     O .data	00000200              host_table
0804d0a0 g     O .data	0000000c              n1
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
00000000       F *UND*	00000000              write@@GLIBC_2.0
080491ed g     F .text	0000001f              string_length
00000000       F *UND*	00000000              strcasecmp@@GLIBC_2.0
0804a1c0 g     F .text	0000005d              __libc_csu_init
0804d7e0 g     O .bss	00000004              stdin@@GLIBC_2.0
00000000       F *UND*	00000000              __isoc99_sscanf@@GLIBC_2.7
0804d0e8 g     O .data	0000000c              n34
00000000       F *UND*	00000000              fopen@@GLIBC_2.1
08048efb g     F .text	00000043              func6
0804d0d0 g     O .data	0000000c              n32
0804de90 g       .bss	00000000              _end
00000000       F *UND*	00000000              __errno_location@@GLIBC_2.0
08048980 g     F .text	00000000              _start
0804a240 g     O .rodata	00000004              _fp_hw
0804d7f0 g     O .bss	00000004              infile
0804966d g     F .text	00000023              sigalrm_handler
08049f2e g     F .text	00000035              init_timeout
0804d7e4 g     O .bss	00000004              stdout@@GLIBC_2.0
0804d7c0 g       .bss	00000000              __bss_start
0804d1a0 g     O .data	00000400              userid
08048a7b g     F .text	000001b2              main
00000000       F *UND*	00000000              __printf_chk@@GLIBC_2.3.4
0804d13c g     O .data	0000000c              n47
0804d10c g     O .data	0000000c              n43
0804d0f4 g     O .data	0000000c              n41
0804953e g     F .text	000000f9              read_line
0804d124 g     O .data	0000000c              n45
0804920c g     F .text	00000065              strings_not_equal
08048d25 g     F .text	0000006b              phase_4
08048ff8 g     F .text	000000e6              phase_8
08048f3e g     F .text	00000072              phase_6
0804de40 g     O .bss	00000050              scratch
00000000  w      *UND*	00000000              _Jv_RegisterClasses
0804a135 g     F .text	0000007c              driver_post
080493de g     F .text	000000e8              send_msg
08048c89 g     F .text	00000021              phase_2
0804d5a0 g     O .data	00000004              bomb_id
00000000       F *UND*	00000000              socket@@GLIBC_2.0
0804d7c0 g     O .data	00000000              .hidden __TMC_END__
00000000       F *UND*	00000000              __fprintf_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
0804d160 g     O .data	0000000c              node2
0804d178 g     O .data	0000000c              node4
00000000       F *UND*	00000000              gethostbyname@@GLIBC_2.0
00000000       F *UND*	00000000              strtol@@GLIBC_2.0
0804d190 g     O .data	0000000c              node6
00000000       F *UND*	00000000              connect@@GLIBC_2.0
08048760 g     F .init	00000000              _init
00000000       F *UND*	00000000              close@@GLIBC_2.0
08049503 g     F .text	0000003b              read_six_numbers
0804d0ac g     O .data	0000000c              n21
08049271 g     F .text	000000ee              initialize_bomb
00000000       F *UND*	00000000              __ctype_b_loc@@GLIBC_2.3
00000000       F *UND*	00000000              __sprintf_chk@@GLIBC_2.3.4



Disassembly of section .init:

08048760 <_init>:
 8048760:	53                   	push   %ebx
 8048761:	83 ec 08             	sub    $0x8,%esp
 8048764:	e8 47 02 00 00       	call   80489b0 <__x86.get_pc_thunk.bx>
 8048769:	81 c3 97 48 00 00    	add    $0x4897,%ebx
 804876f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048775:	85 c0                	test   %eax,%eax
 8048777:	74 05                	je     804877e <_init+0x1e>
 8048779:	e8 f2 01 00 00       	call   8048970 <.plt.got>
 804877e:	83 c4 08             	add    $0x8,%esp
 8048781:	5b                   	pop    %ebx
 8048782:	c3                   	ret    

Disassembly of section .plt:

08048790 <.plt>:
 8048790:	ff 35 04 d0 04 08    	pushl  0x804d004
 8048796:	ff 25 08 d0 04 08    	jmp    *0x804d008
 804879c:	00 00                	add    %al,(%eax)
	...

080487a0 <read@plt>:
 80487a0:	ff 25 0c d0 04 08    	jmp    *0x804d00c
 80487a6:	68 00 00 00 00       	push   $0x0
 80487ab:	e9 e0 ff ff ff       	jmp    8048790 <.plt>

080487b0 <fflush@plt>:
 80487b0:	ff 25 10 d0 04 08    	jmp    *0x804d010
 80487b6:	68 08 00 00 00       	push   $0x8
 80487bb:	e9 d0 ff ff ff       	jmp    8048790 <.plt>

080487c0 <fgets@plt>:
 80487c0:	ff 25 14 d0 04 08    	jmp    *0x804d014
 80487c6:	68 10 00 00 00       	push   $0x10
 80487cb:	e9 c0 ff ff ff       	jmp    8048790 <.plt>

080487d0 <signal@plt>:
 80487d0:	ff 25 18 d0 04 08    	jmp    *0x804d018
 80487d6:	68 18 00 00 00       	push   $0x18
 80487db:	e9 b0 ff ff ff       	jmp    8048790 <.plt>

080487e0 <sleep@plt>:
 80487e0:	ff 25 1c d0 04 08    	jmp    *0x804d01c
 80487e6:	68 20 00 00 00       	push   $0x20
 80487eb:	e9 a0 ff ff ff       	jmp    8048790 <.plt>

080487f0 <alarm@plt>:
 80487f0:	ff 25 20 d0 04 08    	jmp    *0x804d020
 80487f6:	68 28 00 00 00       	push   $0x28
 80487fb:	e9 90 ff ff ff       	jmp    8048790 <.plt>

08048800 <__stack_chk_fail@plt>:
 8048800:	ff 25 24 d0 04 08    	jmp    *0x804d024
 8048806:	68 30 00 00 00       	push   $0x30
 804880b:	e9 80 ff ff ff       	jmp    8048790 <.plt>

08048810 <strcpy@plt>:
 8048810:	ff 25 28 d0 04 08    	jmp    *0x804d028
 8048816:	68 38 00 00 00       	push   $0x38
 804881b:	e9 70 ff ff ff       	jmp    8048790 <.plt>

08048820 <gethostname@plt>:
 8048820:	ff 25 2c d0 04 08    	jmp    *0x804d02c
 8048826:	68 40 00 00 00       	push   $0x40
 804882b:	e9 60 ff ff ff       	jmp    8048790 <.plt>

08048830 <getenv@plt>:
 8048830:	ff 25 30 d0 04 08    	jmp    *0x804d030
 8048836:	68 48 00 00 00       	push   $0x48
 804883b:	e9 50 ff ff ff       	jmp    8048790 <.plt>

08048840 <malloc@plt>:
 8048840:	ff 25 34 d0 04 08    	jmp    *0x804d034
 8048846:	68 50 00 00 00       	push   $0x50
 804884b:	e9 40 ff ff ff       	jmp    8048790 <.plt>

08048850 <puts@plt>:
 8048850:	ff 25 38 d0 04 08    	jmp    *0x804d038
 8048856:	68 58 00 00 00       	push   $0x58
 804885b:	e9 30 ff ff ff       	jmp    8048790 <.plt>

08048860 <__memmove_chk@plt>:
 8048860:	ff 25 3c d0 04 08    	jmp    *0x804d03c
 8048866:	68 60 00 00 00       	push   $0x60
 804886b:	e9 20 ff ff ff       	jmp    8048790 <.plt>

08048870 <exit@plt>:
 8048870:	ff 25 40 d0 04 08    	jmp    *0x804d040
 8048876:	68 68 00 00 00       	push   $0x68
 804887b:	e9 10 ff ff ff       	jmp    8048790 <.plt>

08048880 <__libc_start_main@plt>:
 8048880:	ff 25 44 d0 04 08    	jmp    *0x804d044
 8048886:	68 70 00 00 00       	push   $0x70
 804888b:	e9 00 ff ff ff       	jmp    8048790 <.plt>

08048890 <write@plt>:
 8048890:	ff 25 48 d0 04 08    	jmp    *0x804d048
 8048896:	68 78 00 00 00       	push   $0x78
 804889b:	e9 f0 fe ff ff       	jmp    8048790 <.plt>

080488a0 <strcasecmp@plt>:
 80488a0:	ff 25 4c d0 04 08    	jmp    *0x804d04c
 80488a6:	68 80 00 00 00       	push   $0x80
 80488ab:	e9 e0 fe ff ff       	jmp    8048790 <.plt>

080488b0 <__isoc99_sscanf@plt>:
 80488b0:	ff 25 50 d0 04 08    	jmp    *0x804d050
 80488b6:	68 88 00 00 00       	push   $0x88
 80488bb:	e9 d0 fe ff ff       	jmp    8048790 <.plt>

080488c0 <fopen@plt>:
 80488c0:	ff 25 54 d0 04 08    	jmp    *0x804d054
 80488c6:	68 90 00 00 00       	push   $0x90
 80488cb:	e9 c0 fe ff ff       	jmp    8048790 <.plt>

080488d0 <__errno_location@plt>:
 80488d0:	ff 25 58 d0 04 08    	jmp    *0x804d058
 80488d6:	68 98 00 00 00       	push   $0x98
 80488db:	e9 b0 fe ff ff       	jmp    8048790 <.plt>

080488e0 <__printf_chk@plt>:
 80488e0:	ff 25 5c d0 04 08    	jmp    *0x804d05c
 80488e6:	68 a0 00 00 00       	push   $0xa0
 80488eb:	e9 a0 fe ff ff       	jmp    8048790 <.plt>

080488f0 <socket@plt>:
 80488f0:	ff 25 60 d0 04 08    	jmp    *0x804d060
 80488f6:	68 a8 00 00 00       	push   $0xa8
 80488fb:	e9 90 fe ff ff       	jmp    8048790 <.plt>

08048900 <__fprintf_chk@plt>:
 8048900:	ff 25 64 d0 04 08    	jmp    *0x804d064
 8048906:	68 b0 00 00 00       	push   $0xb0
 804890b:	e9 80 fe ff ff       	jmp    8048790 <.plt>

08048910 <gethostbyname@plt>:
 8048910:	ff 25 68 d0 04 08    	jmp    *0x804d068
 8048916:	68 b8 00 00 00       	push   $0xb8
 804891b:	e9 70 fe ff ff       	jmp    8048790 <.plt>

08048920 <strtol@plt>:
 8048920:	ff 25 6c d0 04 08    	jmp    *0x804d06c
 8048926:	68 c0 00 00 00       	push   $0xc0
 804892b:	e9 60 fe ff ff       	jmp    8048790 <.plt>

08048930 <connect@plt>:
 8048930:	ff 25 70 d0 04 08    	jmp    *0x804d070
 8048936:	68 c8 00 00 00       	push   $0xc8
 804893b:	e9 50 fe ff ff       	jmp    8048790 <.plt>

08048940 <close@plt>:
 8048940:	ff 25 74 d0 04 08    	jmp    *0x804d074
 8048946:	68 d0 00 00 00       	push   $0xd0
 804894b:	e9 40 fe ff ff       	jmp    8048790 <.plt>

08048950 <__ctype_b_loc@plt>:
 8048950:	ff 25 78 d0 04 08    	jmp    *0x804d078
 8048956:	68 d8 00 00 00       	push   $0xd8
 804895b:	e9 30 fe ff ff       	jmp    8048790 <.plt>

08048960 <__sprintf_chk@plt>:
 8048960:	ff 25 7c d0 04 08    	jmp    *0x804d07c
 8048966:	68 e0 00 00 00       	push   $0xe0
 804896b:	e9 20 fe ff ff       	jmp    8048790 <.plt>

Disassembly of section .plt.got:

08048970 <.plt.got>:
 8048970:	ff 25 fc cf 04 08    	jmp    *0x804cffc
 8048976:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048980 <_start>:
 8048980:	31 ed                	xor    %ebp,%ebp
 8048982:	5e                   	pop    %esi
 8048983:	89 e1                	mov    %esp,%ecx
 8048985:	83 e4 f0             	and    $0xfffffff0,%esp
 8048988:	50                   	push   %eax
 8048989:	54                   	push   %esp
 804898a:	52                   	push   %edx
 804898b:	68 20 a2 04 08       	push   $0x804a220
 8048990:	68 c0 a1 04 08       	push   $0x804a1c0
 8048995:	51                   	push   %ecx
 8048996:	56                   	push   %esi
 8048997:	68 7b 8a 04 08       	push   $0x8048a7b
 804899c:	e8 df fe ff ff       	call   8048880 <__libc_start_main@plt>
 80489a1:	f4                   	hlt    
 80489a2:	66 90                	xchg   %ax,%ax
 80489a4:	66 90                	xchg   %ax,%ax
 80489a6:	66 90                	xchg   %ax,%ax
 80489a8:	66 90                	xchg   %ax,%ax
 80489aa:	66 90                	xchg   %ax,%ax
 80489ac:	66 90                	xchg   %ax,%ax
 80489ae:	66 90                	xchg   %ax,%ax

080489b0 <__x86.get_pc_thunk.bx>:
 80489b0:	8b 1c 24             	mov    (%esp),%ebx
 80489b3:	c3                   	ret    
 80489b4:	66 90                	xchg   %ax,%ax
 80489b6:	66 90                	xchg   %ax,%ax
 80489b8:	66 90                	xchg   %ax,%ax
 80489ba:	66 90                	xchg   %ax,%ax
 80489bc:	66 90                	xchg   %ax,%ax
 80489be:	66 90                	xchg   %ax,%ax

080489c0 <deregister_tm_clones>:
 80489c0:	b8 c3 d7 04 08       	mov    $0x804d7c3,%eax
 80489c5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489ca:	83 f8 06             	cmp    $0x6,%eax
 80489cd:	76 1a                	jbe    80489e9 <deregister_tm_clones+0x29>
 80489cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80489d4:	85 c0                	test   %eax,%eax
 80489d6:	74 11                	je     80489e9 <deregister_tm_clones+0x29>
 80489d8:	55                   	push   %ebp
 80489d9:	89 e5                	mov    %esp,%ebp
 80489db:	83 ec 14             	sub    $0x14,%esp
 80489de:	68 c0 d7 04 08       	push   $0x804d7c0
 80489e3:	ff d0                	call   *%eax
 80489e5:	83 c4 10             	add    $0x10,%esp
 80489e8:	c9                   	leave  
 80489e9:	f3 c3                	repz ret 
 80489eb:	90                   	nop
 80489ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080489f0 <register_tm_clones>:
 80489f0:	b8 c0 d7 04 08       	mov    $0x804d7c0,%eax
 80489f5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489fa:	c1 f8 02             	sar    $0x2,%eax
 80489fd:	89 c2                	mov    %eax,%edx
 80489ff:	c1 ea 1f             	shr    $0x1f,%edx
 8048a02:	01 d0                	add    %edx,%eax
 8048a04:	d1 f8                	sar    %eax
 8048a06:	74 1b                	je     8048a23 <register_tm_clones+0x33>
 8048a08:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a0d:	85 d2                	test   %edx,%edx
 8048a0f:	74 12                	je     8048a23 <register_tm_clones+0x33>
 8048a11:	55                   	push   %ebp
 8048a12:	89 e5                	mov    %esp,%ebp
 8048a14:	83 ec 10             	sub    $0x10,%esp
 8048a17:	50                   	push   %eax
 8048a18:	68 c0 d7 04 08       	push   $0x804d7c0
 8048a1d:	ff d2                	call   *%edx
 8048a1f:	83 c4 10             	add    $0x10,%esp
 8048a22:	c9                   	leave  
 8048a23:	f3 c3                	repz ret 
 8048a25:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048a29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048a30 <__do_global_dtors_aux>:
 8048a30:	80 3d e8 d7 04 08 00 	cmpb   $0x0,0x804d7e8
 8048a37:	75 13                	jne    8048a4c <__do_global_dtors_aux+0x1c>
 8048a39:	55                   	push   %ebp
 8048a3a:	89 e5                	mov    %esp,%ebp
 8048a3c:	83 ec 08             	sub    $0x8,%esp
 8048a3f:	e8 7c ff ff ff       	call   80489c0 <deregister_tm_clones>
 8048a44:	c6 05 e8 d7 04 08 01 	movb   $0x1,0x804d7e8
 8048a4b:	c9                   	leave  
 8048a4c:	f3 c3                	repz ret 
 8048a4e:	66 90                	xchg   %ax,%ax

08048a50 <frame_dummy>:
 8048a50:	b8 10 cf 04 08       	mov    $0x804cf10,%eax
 8048a55:	8b 10                	mov    (%eax),%edx
 8048a57:	85 d2                	test   %edx,%edx
 8048a59:	75 05                	jne    8048a60 <frame_dummy+0x10>
 8048a5b:	eb 93                	jmp    80489f0 <register_tm_clones>
 8048a5d:	8d 76 00             	lea    0x0(%esi),%esi
 8048a60:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a65:	85 d2                	test   %edx,%edx
 8048a67:	74 f2                	je     8048a5b <frame_dummy+0xb>
 8048a69:	55                   	push   %ebp
 8048a6a:	89 e5                	mov    %esp,%ebp
 8048a6c:	83 ec 14             	sub    $0x14,%esp
 8048a6f:	50                   	push   %eax
 8048a70:	ff d2                	call   *%edx
 8048a72:	83 c4 10             	add    $0x10,%esp
 8048a75:	c9                   	leave  
 8048a76:	e9 75 ff ff ff       	jmp    80489f0 <register_tm_clones>

08048a7b <main>:
 8048a7b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8048a7f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048a82:	ff 71 fc             	pushl  -0x4(%ecx)
 8048a85:	55                   	push   %ebp
 8048a86:	89 e5                	mov    %esp,%ebp
 8048a88:	53                   	push   %ebx
 8048a89:	51                   	push   %ecx
 8048a8a:	8b 01                	mov    (%ecx),%eax
 8048a8c:	8b 59 04             	mov    0x4(%ecx),%ebx
 8048a8f:	83 f8 01             	cmp    $0x1,%eax
 8048a92:	75 0c                	jne    8048aa0 <main+0x25>
 8048a94:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 8048a99:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048a9e:	eb 5b                	jmp    8048afb <main+0x80>
 8048aa0:	83 f8 02             	cmp    $0x2,%eax
 8048aa3:	75 39                	jne    8048ade <main+0x63>
 8048aa5:	83 ec 08             	sub    $0x8,%esp
 8048aa8:	68 48 a2 04 08       	push   $0x804a248
 8048aad:	ff 73 04             	pushl  0x4(%ebx)
 8048ab0:	e8 0b fe ff ff       	call   80488c0 <fopen@plt>
 8048ab5:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048aba:	83 c4 10             	add    $0x10,%esp
 8048abd:	85 c0                	test   %eax,%eax
 8048abf:	75 3a                	jne    8048afb <main+0x80>
 8048ac1:	ff 73 04             	pushl  0x4(%ebx)
 8048ac4:	ff 33                	pushl  (%ebx)
 8048ac6:	68 4a a2 04 08       	push   $0x804a24a
 8048acb:	6a 01                	push   $0x1
 8048acd:	e8 0e fe ff ff       	call   80488e0 <__printf_chk@plt>
 8048ad2:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048ad9:	e8 92 fd ff ff       	call   8048870 <exit@plt>
 8048ade:	83 ec 04             	sub    $0x4,%esp
 8048ae1:	ff 33                	pushl  (%ebx)
 8048ae3:	68 67 a2 04 08       	push   $0x804a267
 8048ae8:	6a 01                	push   $0x1
 8048aea:	e8 f1 fd ff ff       	call   80488e0 <__printf_chk@plt>
 8048aef:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048af6:	e8 75 fd ff ff       	call   8048870 <exit@plt>
 8048afb:	e8 71 07 00 00       	call   8049271 <initialize_bomb>
 8048b00:	83 ec 0c             	sub    $0xc,%esp
 8048b03:	68 d8 a2 04 08       	push   $0x804a2d8
 8048b08:	e8 43 fd ff ff       	call   8048850 <puts@plt>
 8048b0d:	c7 04 24 14 a3 04 08 	movl   $0x804a314,(%esp)
 8048b14:	e8 37 fd ff ff       	call   8048850 <puts@plt>
 8048b19:	e8 20 0a 00 00       	call   804953e <read_line>
 8048b1e:	89 04 24             	mov    %eax,(%esp)
 8048b21:	e8 07 01 00 00       	call   8048c2d <phase_1>
 8048b26:	e8 0c 0b 00 00       	call   8049637 <phase_defused>
 8048b2b:	c7 04 24 40 a3 04 08 	movl   $0x804a340,(%esp)
 8048b32:	e8 19 fd ff ff       	call   8048850 <puts@plt>
 8048b37:	e8 02 0a 00 00       	call   804953e <read_line>
 8048b3c:	89 04 24             	mov    %eax,(%esp)
 8048b3f:	e8 45 01 00 00       	call   8048c89 <phase_2>
 8048b44:	e8 ee 0a 00 00       	call   8049637 <phase_defused>
 8048b49:	c7 04 24 81 a2 04 08 	movl   $0x804a281,(%esp)
 8048b50:	e8 fb fc ff ff       	call   8048850 <puts@plt>
 8048b55:	e8 e4 09 00 00       	call   804953e <read_line>
 8048b5a:	89 04 24             	mov    %eax,(%esp)
 8048b5d:	e8 48 01 00 00       	call   8048caa <phase_3>
 8048b62:	e8 d0 0a 00 00       	call   8049637 <phase_defused>
 8048b67:	c7 04 24 9f a2 04 08 	movl   $0x804a29f,(%esp)
 8048b6e:	e8 dd fc ff ff       	call   8048850 <puts@plt>
 8048b73:	e8 c6 09 00 00       	call   804953e <read_line>
 8048b78:	89 04 24             	mov    %eax,(%esp)
 8048b7b:	e8 a5 01 00 00       	call   8048d25 <phase_4>
 8048b80:	e8 b2 0a 00 00       	call   8049637 <phase_defused>
 8048b85:	c7 04 24 6c a3 04 08 	movl   $0x804a36c,(%esp)
 8048b8c:	e8 bf fc ff ff       	call   8048850 <puts@plt>
 8048b91:	e8 a8 09 00 00       	call   804953e <read_line>
 8048b96:	89 04 24             	mov    %eax,(%esp)
 8048b99:	e8 f2 01 00 00       	call   8048d90 <phase_5>
 8048b9e:	e8 94 0a 00 00       	call   8049637 <phase_defused>
 8048ba3:	c7 04 24 b0 a2 04 08 	movl   $0x804a2b0,(%esp)
 8048baa:	e8 a1 fc ff ff       	call   8048850 <puts@plt>
 8048baf:	e8 8a 09 00 00       	call   804953e <read_line>
 8048bb4:	89 04 24             	mov    %eax,(%esp)
 8048bb7:	e8 82 03 00 00       	call   8048f3e <phase_6>
 8048bbc:	e8 76 0a 00 00       	call   8049637 <phase_defused>
 8048bc1:	c7 04 24 90 a3 04 08 	movl   $0x804a390,(%esp)
 8048bc8:	e8 83 fc ff ff       	call   8048850 <puts@plt>
 8048bcd:	e8 6c 09 00 00       	call   804953e <read_line>
 8048bd2:	89 04 24             	mov    %eax,(%esp)
 8048bd5:	e8 d6 03 00 00       	call   8048fb0 <phase_7>
 8048bda:	e8 58 0a 00 00       	call   8049637 <phase_defused>
 8048bdf:	c7 04 24 b0 a3 04 08 	movl   $0x804a3b0,(%esp)
 8048be6:	e8 65 fc ff ff       	call   8048850 <puts@plt>
 8048beb:	e8 4e 09 00 00       	call   804953e <read_line>
 8048bf0:	89 04 24             	mov    %eax,(%esp)
 8048bf3:	e8 00 04 00 00       	call   8048ff8 <phase_8>
 8048bf8:	e8 3a 0a 00 00       	call   8049637 <phase_defused>
 8048bfd:	c7 04 24 ce a2 04 08 	movl   $0x804a2ce,(%esp)
 8048c04:	e8 47 fc ff ff       	call   8048850 <puts@plt>
 8048c09:	e8 30 09 00 00       	call   804953e <read_line>
 8048c0e:	89 04 24             	mov    %eax,(%esp)
 8048c11:	e8 19 05 00 00       	call   804912f <phase_9>
 8048c16:	e8 1c 0a 00 00       	call   8049637 <phase_defused>
 8048c1b:	83 c4 10             	add    $0x10,%esp
 8048c1e:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c23:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8048c26:	59                   	pop    %ecx
 8048c27:	5b                   	pop    %ebx
 8048c28:	5d                   	pop    %ebp
 8048c29:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048c2c:	c3                   	ret    

08048c2d <phase_1>:
 8048c2d:	83 ec 20             	sub    $0x20,%esp
 8048c30:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048c36:	89 44 24 10          	mov    %eax,0x10(%esp)
 8048c3a:	31 c0                	xor    %eax,%eax
 8048c3c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8048c43:	00 
 8048c44:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048c48:	50                   	push   %eax
 8048c49:	68 d5 a3 04 08       	push   $0x804a3d5
 8048c4e:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048c52:	e8 59 fc ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048c57:	83 c4 10             	add    $0x10,%esp
 8048c5a:	83 f8 01             	cmp    $0x1,%eax
 8048c5d:	74 05                	je     8048c64 <phase_1+0x37>
 8048c5f:	e8 62 08 00 00       	call   80494c6 <explode_bomb>
 8048c64:	81 7c 24 08 23 03 00 	cmpl   $0x323,0x8(%esp)
 8048c6b:	00 
 8048c6c:	74 05                	je     8048c73 <phase_1+0x46>
 8048c6e:	e8 53 08 00 00       	call   80494c6 <explode_bomb>
 8048c73:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048c77:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048c7e:	74 05                	je     8048c85 <phase_1+0x58>
 8048c80:	e8 7b fb ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048c85:	83 c4 1c             	add    $0x1c,%esp
 8048c88:	c3                   	ret    

08048c89 <phase_2>:
 8048c89:	83 ec 14             	sub    $0x14,%esp
 8048c8c:	68 d8 a3 04 08       	push   $0x804a3d8
 8048c91:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048c95:	e8 72 05 00 00       	call   804920c <strings_not_equal>
 8048c9a:	83 c4 10             	add    $0x10,%esp
 8048c9d:	85 c0                	test   %eax,%eax
 8048c9f:	74 05                	je     8048ca6 <phase_2+0x1d>
 8048ca1:	e8 20 08 00 00       	call   80494c6 <explode_bomb>
 8048ca6:	83 c4 0c             	add    $0xc,%esp
 8048ca9:	c3                   	ret    

08048caa <phase_3>:
 8048caa:	83 ec 18             	sub    $0x18,%esp
 8048cad:	68 08 a4 04 08       	push   $0x804a408
 8048cb2:	e8 36 05 00 00       	call   80491ed <string_length>
 8048cb7:	83 c0 01             	add    $0x1,%eax
 8048cba:	89 04 24             	mov    %eax,(%esp)
 8048cbd:	e8 7e fb ff ff       	call   8048840 <malloc@plt>
 8048cc2:	c7 00 59 6f 20 68    	movl   $0x68206f59,(%eax)
 8048cc8:	c7 40 04 6f 20 79 6f 	movl   $0x6f79206f,0x4(%eax)
 8048ccf:	c7 40 08 20 68 6f 2c 	movl   $0x2c6f6820,0x8(%eax)
 8048cd6:	c7 40 0c 20 61 20 70 	movl   $0x70206120,0xc(%eax)
 8048cdd:	c7 40 10 69 72 61 74 	movl   $0x74617269,0x10(%eax)
 8048ce4:	c7 40 14 65 27 73 20 	movl   $0x20732765,0x14(%eax)
 8048ceb:	c7 40 18 6c 69 66 65 	movl   $0x6566696c,0x18(%eax)
 8048cf2:	c7 40 1c 20 66 6f 72 	movl   $0x726f6620,0x1c(%eax)
 8048cf9:	c7 40 20 20 6d 65 2e 	movl   $0x2e656d20,0x20(%eax)
 8048d00:	c6 40 24 00          	movb   $0x0,0x24(%eax)
 8048d04:	c6 40 08 4b          	movb   $0x4b,0x8(%eax)
 8048d08:	83 c4 08             	add    $0x8,%esp
 8048d0b:	50                   	push   %eax
 8048d0c:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048d10:	e8 f7 04 00 00       	call   804920c <strings_not_equal>
 8048d15:	83 c4 10             	add    $0x10,%esp
 8048d18:	85 c0                	test   %eax,%eax
 8048d1a:	74 05                	je     8048d21 <phase_3+0x77>
 8048d1c:	e8 a5 07 00 00       	call   80494c6 <explode_bomb>
 8048d21:	83 c4 0c             	add    $0xc,%esp
 8048d24:	c3                   	ret    

08048d25 <phase_4>:
 8048d25:	56                   	push   %esi
 8048d26:	53                   	push   %ebx
 8048d27:	83 ec 2c             	sub    $0x2c,%esp
 8048d2a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d30:	89 44 24 24          	mov    %eax,0x24(%esp)
 8048d34:	31 c0                	xor    %eax,%eax
 8048d36:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048d3a:	50                   	push   %eax
 8048d3b:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048d3f:	e8 bf 07 00 00       	call   8049503 <read_six_numbers>
 8048d44:	83 c4 10             	add    $0x10,%esp
 8048d47:	83 7c 24 04 01       	cmpl   $0x1,0x4(%esp)
 8048d4c:	75 07                	jne    8048d55 <phase_4+0x30>
 8048d4e:	83 7c 24 08 04       	cmpl   $0x4,0x8(%esp)
 8048d53:	74 05                	je     8048d5a <phase_4+0x35>
 8048d55:	e8 6c 07 00 00       	call   80494c6 <explode_bomb>
 8048d5a:	8d 5c 24 04          	lea    0x4(%esp),%ebx
 8048d5e:	8d 74 24 14          	lea    0x14(%esp),%esi
 8048d62:	8b 43 04             	mov    0x4(%ebx),%eax
 8048d65:	03 03                	add    (%ebx),%eax
 8048d67:	39 43 08             	cmp    %eax,0x8(%ebx)
 8048d6a:	74 05                	je     8048d71 <phase_4+0x4c>
 8048d6c:	e8 55 07 00 00       	call   80494c6 <explode_bomb>
 8048d71:	83 c3 04             	add    $0x4,%ebx
 8048d74:	39 f3                	cmp    %esi,%ebx
 8048d76:	75 ea                	jne    8048d62 <phase_4+0x3d>
 8048d78:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048d7c:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048d83:	74 05                	je     8048d8a <phase_4+0x65>
 8048d85:	e8 76 fa ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048d8a:	83 c4 24             	add    $0x24,%esp
 8048d8d:	5b                   	pop    %ebx
 8048d8e:	5e                   	pop    %esi
 8048d8f:	c3                   	ret    

08048d90 <phase_5>:
 8048d90:	83 ec 28             	sub    $0x28,%esp
 8048d93:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d99:	89 44 24 18          	mov    %eax,0x18(%esp)
 8048d9d:	31 c0                	xor    %eax,%eax
 8048d9f:	8d 44 24 14          	lea    0x14(%esp),%eax
 8048da3:	50                   	push   %eax
 8048da4:	8d 44 24 13          	lea    0x13(%esp),%eax
 8048da8:	50                   	push   %eax
 8048da9:	8d 44 24 18          	lea    0x18(%esp),%eax
 8048dad:	50                   	push   %eax
 8048dae:	68 cf a3 04 08       	push   $0x804a3cf
 8048db3:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048db7:	e8 f4 fa ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048dbc:	83 c4 20             	add    $0x20,%esp
 8048dbf:	83 f8 02             	cmp    $0x2,%eax
 8048dc2:	7f 05                	jg     8048dc9 <phase_5+0x39>
 8048dc4:	e8 fd 06 00 00       	call   80494c6 <explode_bomb>
 8048dc9:	83 7c 24 04 07       	cmpl   $0x7,0x4(%esp)
 8048dce:	0f 87 fc 00 00 00    	ja     8048ed0 <phase_5+0x140>
 8048dd4:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048dd8:	ff 24 85 40 a4 04 08 	jmp    *0x804a440(,%eax,4)
 8048ddf:	b8 71 00 00 00       	mov    $0x71,%eax
 8048de4:	81 7c 24 08 e2 03 00 	cmpl   $0x3e2,0x8(%esp)
 8048deb:	00 
 8048dec:	0f 84 e8 00 00 00    	je     8048eda <phase_5+0x14a>
 8048df2:	e8 cf 06 00 00       	call   80494c6 <explode_bomb>
 8048df7:	b8 71 00 00 00       	mov    $0x71,%eax
 8048dfc:	e9 d9 00 00 00       	jmp    8048eda <phase_5+0x14a>
 8048e01:	b8 71 00 00 00       	mov    $0x71,%eax
 8048e06:	81 7c 24 08 0a 02 00 	cmpl   $0x20a,0x8(%esp)
 8048e0d:	00 
 8048e0e:	0f 84 c6 00 00 00    	je     8048eda <phase_5+0x14a>
 8048e14:	e8 ad 06 00 00       	call   80494c6 <explode_bomb>
 8048e19:	b8 71 00 00 00       	mov    $0x71,%eax
 8048e1e:	e9 b7 00 00 00       	jmp    8048eda <phase_5+0x14a>
 8048e23:	b8 7a 00 00 00       	mov    $0x7a,%eax
 8048e28:	81 7c 24 08 b8 01 00 	cmpl   $0x1b8,0x8(%esp)
 8048e2f:	00 
 8048e30:	0f 84 a4 00 00 00    	je     8048eda <phase_5+0x14a>
 8048e36:	e8 8b 06 00 00       	call   80494c6 <explode_bomb>
 8048e3b:	b8 7a 00 00 00       	mov    $0x7a,%eax
 8048e40:	e9 95 00 00 00       	jmp    8048eda <phase_5+0x14a>
 8048e45:	b8 75 00 00 00       	mov    $0x75,%eax
 8048e4a:	81 7c 24 08 92 02 00 	cmpl   $0x292,0x8(%esp)
 8048e51:	00 
 8048e52:	0f 84 82 00 00 00    	je     8048eda <phase_5+0x14a>
 8048e58:	e8 69 06 00 00       	call   80494c6 <explode_bomb>
 8048e5d:	b8 75 00 00 00       	mov    $0x75,%eax
 8048e62:	eb 76                	jmp    8048eda <phase_5+0x14a>
 8048e64:	b8 75 00 00 00       	mov    $0x75,%eax
 8048e69:	81 7c 24 08 29 01 00 	cmpl   $0x129,0x8(%esp)
 8048e70:	00 
 8048e71:	74 67                	je     8048eda <phase_5+0x14a>
 8048e73:	e8 4e 06 00 00       	call   80494c6 <explode_bomb>
 8048e78:	b8 75 00 00 00       	mov    $0x75,%eax
 8048e7d:	eb 5b                	jmp    8048eda <phase_5+0x14a>
 8048e7f:	b8 7a 00 00 00       	mov    $0x7a,%eax
 8048e84:	81 7c 24 08 27 02 00 	cmpl   $0x227,0x8(%esp)
 8048e8b:	00 
 8048e8c:	74 4c                	je     8048eda <phase_5+0x14a>
 8048e8e:	e8 33 06 00 00       	call   80494c6 <explode_bomb>
 8048e93:	b8 7a 00 00 00       	mov    $0x7a,%eax
 8048e98:	eb 40                	jmp    8048eda <phase_5+0x14a>
 8048e9a:	b8 6c 00 00 00       	mov    $0x6c,%eax
 8048e9f:	81 7c 24 08 d2 03 00 	cmpl   $0x3d2,0x8(%esp)
 8048ea6:	00 
 8048ea7:	74 31                	je     8048eda <phase_5+0x14a>
 8048ea9:	e8 18 06 00 00       	call   80494c6 <explode_bomb>
 8048eae:	b8 6c 00 00 00       	mov    $0x6c,%eax
 8048eb3:	eb 25                	jmp    8048eda <phase_5+0x14a>
 8048eb5:	b8 78 00 00 00       	mov    $0x78,%eax
 8048eba:	81 7c 24 08 14 03 00 	cmpl   $0x314,0x8(%esp)
 8048ec1:	00 
 8048ec2:	74 16                	je     8048eda <phase_5+0x14a>
 8048ec4:	e8 fd 05 00 00       	call   80494c6 <explode_bomb>
 8048ec9:	b8 78 00 00 00       	mov    $0x78,%eax
 8048ece:	eb 0a                	jmp    8048eda <phase_5+0x14a>
 8048ed0:	e8 f1 05 00 00       	call   80494c6 <explode_bomb>
 8048ed5:	b8 73 00 00 00       	mov    $0x73,%eax
 8048eda:	3a 44 24 03          	cmp    0x3(%esp),%al
 8048ede:	74 05                	je     8048ee5 <phase_5+0x155>
 8048ee0:	e8 e1 05 00 00       	call   80494c6 <explode_bomb>
 8048ee5:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048ee9:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048ef0:	74 05                	je     8048ef7 <phase_5+0x167>
 8048ef2:	e8 09 f9 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048ef7:	83 c4 1c             	add    $0x1c,%esp
 8048efa:	c3                   	ret    

08048efb <func6>:
 8048efb:	57                   	push   %edi
 8048efc:	56                   	push   %esi
 8048efd:	53                   	push   %ebx
 8048efe:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8048f02:	8b 7c 24 14          	mov    0x14(%esp),%edi
 8048f06:	85 db                	test   %ebx,%ebx
 8048f08:	7e 2b                	jle    8048f35 <func6+0x3a>
 8048f0a:	89 f8                	mov    %edi,%eax
 8048f0c:	83 fb 01             	cmp    $0x1,%ebx
 8048f0f:	74 29                	je     8048f3a <func6+0x3f>
 8048f11:	83 ec 08             	sub    $0x8,%esp
 8048f14:	57                   	push   %edi
 8048f15:	8d 43 ff             	lea    -0x1(%ebx),%eax
 8048f18:	50                   	push   %eax
 8048f19:	e8 dd ff ff ff       	call   8048efb <func6>
 8048f1e:	83 c4 08             	add    $0x8,%esp
 8048f21:	8d 34 07             	lea    (%edi,%eax,1),%esi
 8048f24:	57                   	push   %edi
 8048f25:	83 eb 02             	sub    $0x2,%ebx
 8048f28:	53                   	push   %ebx
 8048f29:	e8 cd ff ff ff       	call   8048efb <func6>
 8048f2e:	83 c4 10             	add    $0x10,%esp
 8048f31:	01 f0                	add    %esi,%eax
 8048f33:	eb 05                	jmp    8048f3a <func6+0x3f>
 8048f35:	b8 00 00 00 00       	mov    $0x0,%eax
 8048f3a:	5b                   	pop    %ebx
 8048f3b:	5e                   	pop    %esi
 8048f3c:	5f                   	pop    %edi
 8048f3d:	c3                   	ret    

08048f3e <phase_6>:
 8048f3e:	83 ec 1c             	sub    $0x1c,%esp
 8048f41:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048f47:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048f4b:	31 c0                	xor    %eax,%eax
 8048f4d:	8d 44 24 04          	lea    0x4(%esp),%eax
 8048f51:	50                   	push   %eax
 8048f52:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048f56:	50                   	push   %eax
 8048f57:	68 81 a6 04 08       	push   $0x804a681
 8048f5c:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048f60:	e8 4b f9 ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048f65:	83 c4 10             	add    $0x10,%esp
 8048f68:	83 f8 02             	cmp    $0x2,%eax
 8048f6b:	75 0c                	jne    8048f79 <phase_6+0x3b>
 8048f6d:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048f71:	83 e8 02             	sub    $0x2,%eax
 8048f74:	83 f8 02             	cmp    $0x2,%eax
 8048f77:	76 05                	jbe    8048f7e <phase_6+0x40>
 8048f79:	e8 48 05 00 00       	call   80494c6 <explode_bomb>
 8048f7e:	83 ec 08             	sub    $0x8,%esp
 8048f81:	ff 74 24 0c          	pushl  0xc(%esp)
 8048f85:	6a 08                	push   $0x8
 8048f87:	e8 6f ff ff ff       	call   8048efb <func6>
 8048f8c:	83 c4 10             	add    $0x10,%esp
 8048f8f:	3b 44 24 08          	cmp    0x8(%esp),%eax
 8048f93:	74 05                	je     8048f9a <phase_6+0x5c>
 8048f95:	e8 2c 05 00 00       	call   80494c6 <explode_bomb>
 8048f9a:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048f9e:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048fa5:	74 05                	je     8048fac <phase_6+0x6e>
 8048fa7:	e8 54 f8 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048fac:	83 c4 1c             	add    $0x1c,%esp
 8048faf:	c3                   	ret    

08048fb0 <phase_7>:
 8048fb0:	53                   	push   %ebx
 8048fb1:	83 ec 14             	sub    $0x14,%esp
 8048fb4:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 8048fb8:	53                   	push   %ebx
 8048fb9:	e8 2f 02 00 00       	call   80491ed <string_length>
 8048fbe:	83 c4 10             	add    $0x10,%esp
 8048fc1:	83 f8 06             	cmp    $0x6,%eax
 8048fc4:	74 05                	je     8048fcb <phase_7+0x1b>
 8048fc6:	e8 fb 04 00 00       	call   80494c6 <explode_bomb>
 8048fcb:	89 d8                	mov    %ebx,%eax
 8048fcd:	83 c3 06             	add    $0x6,%ebx
 8048fd0:	b9 00 00 00 00       	mov    $0x0,%ecx
 8048fd5:	0f b6 10             	movzbl (%eax),%edx
 8048fd8:	83 e2 0f             	and    $0xf,%edx
 8048fdb:	03 0c 95 60 a4 04 08 	add    0x804a460(,%edx,4),%ecx
 8048fe2:	83 c0 01             	add    $0x1,%eax
 8048fe5:	39 d8                	cmp    %ebx,%eax
 8048fe7:	75 ec                	jne    8048fd5 <phase_7+0x25>
 8048fe9:	83 f9 35             	cmp    $0x35,%ecx
 8048fec:	74 05                	je     8048ff3 <phase_7+0x43>
 8048fee:	e8 d3 04 00 00       	call   80494c6 <explode_bomb>
 8048ff3:	83 c4 08             	add    $0x8,%esp
 8048ff6:	5b                   	pop    %ebx
 8048ff7:	c3                   	ret    

08048ff8 <phase_8>:
 8048ff8:	56                   	push   %esi
 8048ff9:	53                   	push   %ebx
 8048ffa:	83 ec 4c             	sub    $0x4c,%esp
 8048ffd:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049003:	89 44 24 44          	mov    %eax,0x44(%esp)
 8049007:	31 c0                	xor    %eax,%eax
 8049009:	8d 44 24 14          	lea    0x14(%esp),%eax
 804900d:	50                   	push   %eax
 804900e:	ff 74 24 5c          	pushl  0x5c(%esp)
 8049012:	e8 ec 04 00 00       	call   8049503 <read_six_numbers>
 8049017:	83 c4 10             	add    $0x10,%esp
 804901a:	be 00 00 00 00       	mov    $0x0,%esi
 804901f:	8b 44 b4 0c          	mov    0xc(%esp,%esi,4),%eax
 8049023:	83 e8 01             	sub    $0x1,%eax
 8049026:	83 f8 05             	cmp    $0x5,%eax
 8049029:	76 05                	jbe    8049030 <phase_8+0x38>
 804902b:	e8 96 04 00 00       	call   80494c6 <explode_bomb>
 8049030:	83 c6 01             	add    $0x1,%esi
 8049033:	83 fe 06             	cmp    $0x6,%esi
 8049036:	74 33                	je     804906b <phase_8+0x73>
 8049038:	89 f3                	mov    %esi,%ebx
 804903a:	8b 44 9c 0c          	mov    0xc(%esp,%ebx,4),%eax
 804903e:	39 44 b4 08          	cmp    %eax,0x8(%esp,%esi,4)
 8049042:	75 05                	jne    8049049 <phase_8+0x51>
 8049044:	e8 7d 04 00 00       	call   80494c6 <explode_bomb>
 8049049:	83 c3 01             	add    $0x1,%ebx
 804904c:	83 fb 05             	cmp    $0x5,%ebx
 804904f:	7e e9                	jle    804903a <phase_8+0x42>
 8049051:	eb cc                	jmp    804901f <phase_8+0x27>
 8049053:	8b 52 08             	mov    0x8(%edx),%edx
 8049056:	83 c0 01             	add    $0x1,%eax
 8049059:	39 c8                	cmp    %ecx,%eax
 804905b:	75 f6                	jne    8049053 <phase_8+0x5b>
 804905d:	89 54 b4 24          	mov    %edx,0x24(%esp,%esi,4)
 8049061:	83 c3 01             	add    $0x1,%ebx
 8049064:	83 fb 06             	cmp    $0x6,%ebx
 8049067:	75 07                	jne    8049070 <phase_8+0x78>
 8049069:	eb 1c                	jmp    8049087 <phase_8+0x8f>
 804906b:	bb 00 00 00 00       	mov    $0x0,%ebx
 8049070:	89 de                	mov    %ebx,%esi
 8049072:	8b 4c 9c 0c          	mov    0xc(%esp,%ebx,4),%ecx
 8049076:	b8 01 00 00 00       	mov    $0x1,%eax
 804907b:	ba 54 d1 04 08       	mov    $0x804d154,%edx
 8049080:	83 f9 01             	cmp    $0x1,%ecx
 8049083:	7f ce                	jg     8049053 <phase_8+0x5b>
 8049085:	eb d6                	jmp    804905d <phase_8+0x65>
 8049087:	8b 5c 24 24          	mov    0x24(%esp),%ebx
 804908b:	8d 44 24 24          	lea    0x24(%esp),%eax
 804908f:	8d 74 24 38          	lea    0x38(%esp),%esi
 8049093:	89 d9                	mov    %ebx,%ecx
 8049095:	8b 50 04             	mov    0x4(%eax),%edx
 8049098:	89 51 08             	mov    %edx,0x8(%ecx)
 804909b:	83 c0 04             	add    $0x4,%eax
 804909e:	89 d1                	mov    %edx,%ecx
 80490a0:	39 f0                	cmp    %esi,%eax
 80490a2:	75 f1                	jne    8049095 <phase_8+0x9d>
 80490a4:	c7 42 08 00 00 00 00 	movl   $0x0,0x8(%edx)
 80490ab:	be 05 00 00 00       	mov    $0x5,%esi
 80490b0:	8b 43 08             	mov    0x8(%ebx),%eax
 80490b3:	8b 00                	mov    (%eax),%eax
 80490b5:	39 03                	cmp    %eax,(%ebx)
 80490b7:	7e 05                	jle    80490be <phase_8+0xc6>
 80490b9:	e8 08 04 00 00       	call   80494c6 <explode_bomb>
 80490be:	8b 5b 08             	mov    0x8(%ebx),%ebx
 80490c1:	83 ee 01             	sub    $0x1,%esi
 80490c4:	75 ea                	jne    80490b0 <phase_8+0xb8>
 80490c6:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 80490ca:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80490d1:	74 05                	je     80490d8 <phase_8+0xe0>
 80490d3:	e8 28 f7 ff ff       	call   8048800 <__stack_chk_fail@plt>
 80490d8:	83 c4 44             	add    $0x44,%esp
 80490db:	5b                   	pop    %ebx
 80490dc:	5e                   	pop    %esi
 80490dd:	c3                   	ret    

080490de <fun9>:
 80490de:	53                   	push   %ebx
 80490df:	83 ec 08             	sub    $0x8,%esp
 80490e2:	8b 54 24 10          	mov    0x10(%esp),%edx
 80490e6:	8b 4c 24 14          	mov    0x14(%esp),%ecx
 80490ea:	85 d2                	test   %edx,%edx
 80490ec:	74 37                	je     8049125 <fun9+0x47>
 80490ee:	8b 1a                	mov    (%edx),%ebx
 80490f0:	39 cb                	cmp    %ecx,%ebx
 80490f2:	7e 13                	jle    8049107 <fun9+0x29>
 80490f4:	83 ec 08             	sub    $0x8,%esp
 80490f7:	51                   	push   %ecx
 80490f8:	ff 72 04             	pushl  0x4(%edx)
 80490fb:	e8 de ff ff ff       	call   80490de <fun9>
 8049100:	83 c4 10             	add    $0x10,%esp
 8049103:	01 c0                	add    %eax,%eax
 8049105:	eb 23                	jmp    804912a <fun9+0x4c>
 8049107:	b8 00 00 00 00       	mov    $0x0,%eax
 804910c:	39 cb                	cmp    %ecx,%ebx
 804910e:	74 1a                	je     804912a <fun9+0x4c>
 8049110:	83 ec 08             	sub    $0x8,%esp
 8049113:	51                   	push   %ecx
 8049114:	ff 72 08             	pushl  0x8(%edx)
 8049117:	e8 c2 ff ff ff       	call   80490de <fun9>
 804911c:	83 c4 10             	add    $0x10,%esp
 804911f:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 8049123:	eb 05                	jmp    804912a <fun9+0x4c>
 8049125:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804912a:	83 c4 08             	add    $0x8,%esp
 804912d:	5b                   	pop    %ebx
 804912e:	c3                   	ret    

0804912f <phase_9>:
 804912f:	53                   	push   %ebx
 8049130:	83 ec 0c             	sub    $0xc,%esp
 8049133:	6a 0a                	push   $0xa
 8049135:	6a 00                	push   $0x0
 8049137:	ff 74 24 1c          	pushl  0x1c(%esp)
 804913b:	e8 e0 f7 ff ff       	call   8048920 <strtol@plt>
 8049140:	89 c3                	mov    %eax,%ebx
 8049142:	8d 40 ff             	lea    -0x1(%eax),%eax
 8049145:	83 c4 10             	add    $0x10,%esp
 8049148:	3d ec 03 00 00       	cmp    $0x3ec,%eax
 804914d:	76 05                	jbe    8049154 <phase_9+0x25>
 804914f:	e8 72 03 00 00       	call   80494c6 <explode_bomb>
 8049154:	83 ec 08             	sub    $0x8,%esp
 8049157:	53                   	push   %ebx
 8049158:	68 a0 d0 04 08       	push   $0x804d0a0
 804915d:	e8 7c ff ff ff       	call   80490de <fun9>
 8049162:	83 c4 10             	add    $0x10,%esp
 8049165:	83 f8 03             	cmp    $0x3,%eax
 8049168:	74 05                	je     804916f <phase_9+0x40>
 804916a:	e8 57 03 00 00       	call   80494c6 <explode_bomb>
 804916f:	83 c4 08             	add    $0x8,%esp
 8049172:	5b                   	pop    %ebx
 8049173:	c3                   	ret    

08049174 <sig_handler>:
 8049174:	83 ec 18             	sub    $0x18,%esp
 8049177:	68 a0 a4 04 08       	push   $0x804a4a0
 804917c:	e8 cf f6 ff ff       	call   8048850 <puts@plt>
 8049181:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 8049188:	e8 53 f6 ff ff       	call   80487e0 <sleep@plt>
 804918d:	83 c4 08             	add    $0x8,%esp
 8049190:	68 fd a5 04 08       	push   $0x804a5fd
 8049195:	6a 01                	push   $0x1
 8049197:	e8 44 f7 ff ff       	call   80488e0 <__printf_chk@plt>
 804919c:	83 c4 04             	add    $0x4,%esp
 804919f:	ff 35 e4 d7 04 08    	pushl  0x804d7e4
 80491a5:	e8 06 f6 ff ff       	call   80487b0 <fflush@plt>
 80491aa:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80491b1:	e8 2a f6 ff ff       	call   80487e0 <sleep@plt>
 80491b6:	c7 04 24 05 a6 04 08 	movl   $0x804a605,(%esp)
 80491bd:	e8 8e f6 ff ff       	call   8048850 <puts@plt>
 80491c2:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 80491c9:	e8 a2 f6 ff ff       	call   8048870 <exit@plt>

080491ce <invalid_phase>:
 80491ce:	83 ec 10             	sub    $0x10,%esp
 80491d1:	ff 74 24 14          	pushl  0x14(%esp)
 80491d5:	68 0d a6 04 08       	push   $0x804a60d
 80491da:	6a 01                	push   $0x1
 80491dc:	e8 ff f6 ff ff       	call   80488e0 <__printf_chk@plt>
 80491e1:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80491e8:	e8 83 f6 ff ff       	call   8048870 <exit@plt>

080491ed <string_length>:
 80491ed:	8b 54 24 04          	mov    0x4(%esp),%edx
 80491f1:	80 3a 00             	cmpb   $0x0,(%edx)
 80491f4:	74 10                	je     8049206 <string_length+0x19>
 80491f6:	b8 00 00 00 00       	mov    $0x0,%eax
 80491fb:	83 c0 01             	add    $0x1,%eax
 80491fe:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 8049202:	75 f7                	jne    80491fb <string_length+0xe>
 8049204:	f3 c3                	repz ret 
 8049206:	b8 00 00 00 00       	mov    $0x0,%eax
 804920b:	c3                   	ret    

0804920c <strings_not_equal>:
 804920c:	57                   	push   %edi
 804920d:	56                   	push   %esi
 804920e:	53                   	push   %ebx
 804920f:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049213:	8b 74 24 14          	mov    0x14(%esp),%esi
 8049217:	53                   	push   %ebx
 8049218:	e8 d0 ff ff ff       	call   80491ed <string_length>
 804921d:	89 c7                	mov    %eax,%edi
 804921f:	89 34 24             	mov    %esi,(%esp)
 8049222:	e8 c6 ff ff ff       	call   80491ed <string_length>
 8049227:	83 c4 04             	add    $0x4,%esp
 804922a:	ba 01 00 00 00       	mov    $0x1,%edx
 804922f:	39 c7                	cmp    %eax,%edi
 8049231:	75 38                	jne    804926b <strings_not_equal+0x5f>
 8049233:	0f b6 03             	movzbl (%ebx),%eax
 8049236:	84 c0                	test   %al,%al
 8049238:	74 1e                	je     8049258 <strings_not_equal+0x4c>
 804923a:	3a 06                	cmp    (%esi),%al
 804923c:	74 06                	je     8049244 <strings_not_equal+0x38>
 804923e:	eb 1f                	jmp    804925f <strings_not_equal+0x53>
 8049240:	3a 06                	cmp    (%esi),%al
 8049242:	75 22                	jne    8049266 <strings_not_equal+0x5a>
 8049244:	83 c3 01             	add    $0x1,%ebx
 8049247:	83 c6 01             	add    $0x1,%esi
 804924a:	0f b6 03             	movzbl (%ebx),%eax
 804924d:	84 c0                	test   %al,%al
 804924f:	75 ef                	jne    8049240 <strings_not_equal+0x34>
 8049251:	ba 00 00 00 00       	mov    $0x0,%edx
 8049256:	eb 13                	jmp    804926b <strings_not_equal+0x5f>
 8049258:	ba 00 00 00 00       	mov    $0x0,%edx
 804925d:	eb 0c                	jmp    804926b <strings_not_equal+0x5f>
 804925f:	ba 01 00 00 00       	mov    $0x1,%edx
 8049264:	eb 05                	jmp    804926b <strings_not_equal+0x5f>
 8049266:	ba 01 00 00 00       	mov    $0x1,%edx
 804926b:	89 d0                	mov    %edx,%eax
 804926d:	5b                   	pop    %ebx
 804926e:	5e                   	pop    %esi
 804926f:	5f                   	pop    %edi
 8049270:	c3                   	ret    

08049271 <initialize_bomb>:
 8049271:	56                   	push   %esi
 8049272:	53                   	push   %ebx
 8049273:	81 ec 5c 20 00 00    	sub    $0x205c,%esp
 8049279:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804927f:	89 84 24 54 20 00 00 	mov    %eax,0x2054(%esp)
 8049286:	31 c0                	xor    %eax,%eax
 8049288:	68 74 91 04 08       	push   $0x8049174
 804928d:	6a 02                	push   $0x2
 804928f:	e8 3c f5 ff ff       	call   80487d0 <signal@plt>
 8049294:	83 c4 08             	add    $0x8,%esp
 8049297:	6a 40                	push   $0x40
 8049299:	8d 44 24 18          	lea    0x18(%esp),%eax
 804929d:	50                   	push   %eax
 804929e:	e8 7d f5 ff ff       	call   8048820 <gethostname@plt>
 80492a3:	83 c4 10             	add    $0x10,%esp
 80492a6:	85 c0                	test   %eax,%eax
 80492a8:	75 14                	jne    80492be <initialize_bomb+0x4d>
 80492aa:	a1 c0 d5 04 08       	mov    0x804d5c0,%eax
 80492af:	bb c4 d5 04 08       	mov    $0x804d5c4,%ebx
 80492b4:	8d 74 24 0c          	lea    0xc(%esp),%esi
 80492b8:	85 c0                	test   %eax,%eax
 80492ba:	75 1b                	jne    80492d7 <initialize_bomb+0x66>
 80492bc:	eb 56                	jmp    8049314 <initialize_bomb+0xa3>
 80492be:	83 ec 0c             	sub    $0xc,%esp
 80492c1:	68 d8 a4 04 08       	push   $0x804a4d8
 80492c6:	e8 85 f5 ff ff       	call   8048850 <puts@plt>
 80492cb:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80492d2:	e8 99 f5 ff ff       	call   8048870 <exit@plt>
 80492d7:	83 ec 08             	sub    $0x8,%esp
 80492da:	56                   	push   %esi
 80492db:	50                   	push   %eax
 80492dc:	e8 bf f5 ff ff       	call   80488a0 <strcasecmp@plt>
 80492e1:	83 c4 10             	add    $0x10,%esp
 80492e4:	85 c0                	test   %eax,%eax
 80492e6:	74 45                	je     804932d <initialize_bomb+0xbc>
 80492e8:	83 c3 04             	add    $0x4,%ebx
 80492eb:	8b 43 fc             	mov    -0x4(%ebx),%eax
 80492ee:	85 c0                	test   %eax,%eax
 80492f0:	75 e5                	jne    80492d7 <initialize_bomb+0x66>
 80492f2:	eb 20                	jmp    8049314 <initialize_bomb+0xa3>
 80492f4:	83 ec 04             	sub    $0x4,%esp
 80492f7:	8d 44 24 50          	lea    0x50(%esp),%eax
 80492fb:	50                   	push   %eax
 80492fc:	68 1e a6 04 08       	push   $0x804a61e
 8049301:	6a 01                	push   $0x1
 8049303:	e8 d8 f5 ff ff       	call   80488e0 <__printf_chk@plt>
 8049308:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804930f:	e8 5c f5 ff ff       	call   8048870 <exit@plt>
 8049314:	83 ec 0c             	sub    $0xc,%esp
 8049317:	68 10 a5 04 08       	push   $0x804a510
 804931c:	e8 2f f5 ff ff       	call   8048850 <puts@plt>
 8049321:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049328:	e8 43 f5 ff ff       	call   8048870 <exit@plt>
 804932d:	83 ec 0c             	sub    $0xc,%esp
 8049330:	8d 44 24 58          	lea    0x58(%esp),%eax
 8049334:	50                   	push   %eax
 8049335:	e8 29 0c 00 00       	call   8049f63 <init_driver>
 804933a:	83 c4 10             	add    $0x10,%esp
 804933d:	85 c0                	test   %eax,%eax
 804933f:	78 b3                	js     80492f4 <initialize_bomb+0x83>
 8049341:	8b 84 24 4c 20 00 00 	mov    0x204c(%esp),%eax
 8049348:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 804934f:	74 05                	je     8049356 <initialize_bomb+0xe5>
 8049351:	e8 aa f4 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049356:	81 c4 54 20 00 00    	add    $0x2054,%esp
 804935c:	5b                   	pop    %ebx
 804935d:	5e                   	pop    %esi
 804935e:	c3                   	ret    

0804935f <initialize_bomb_solve>:
 804935f:	f3 c3                	repz ret 

08049361 <blank_line>:
 8049361:	56                   	push   %esi
 8049362:	53                   	push   %ebx
 8049363:	83 ec 04             	sub    $0x4,%esp
 8049366:	8b 74 24 10          	mov    0x10(%esp),%esi
 804936a:	eb 14                	jmp    8049380 <blank_line+0x1f>
 804936c:	e8 df f5 ff ff       	call   8048950 <__ctype_b_loc@plt>
 8049371:	83 c6 01             	add    $0x1,%esi
 8049374:	0f be db             	movsbl %bl,%ebx
 8049377:	8b 00                	mov    (%eax),%eax
 8049379:	f6 44 58 01 20       	testb  $0x20,0x1(%eax,%ebx,2)
 804937e:	74 0e                	je     804938e <blank_line+0x2d>
 8049380:	0f b6 1e             	movzbl (%esi),%ebx
 8049383:	84 db                	test   %bl,%bl
 8049385:	75 e5                	jne    804936c <blank_line+0xb>
 8049387:	b8 01 00 00 00       	mov    $0x1,%eax
 804938c:	eb 05                	jmp    8049393 <blank_line+0x32>
 804938e:	b8 00 00 00 00       	mov    $0x0,%eax
 8049393:	83 c4 04             	add    $0x4,%esp
 8049396:	5b                   	pop    %ebx
 8049397:	5e                   	pop    %esi
 8049398:	c3                   	ret    

08049399 <skip>:
 8049399:	53                   	push   %ebx
 804939a:	83 ec 08             	sub    $0x8,%esp
 804939d:	83 ec 04             	sub    $0x4,%esp
 80493a0:	ff 35 f0 d7 04 08    	pushl  0x804d7f0
 80493a6:	6a 50                	push   $0x50
 80493a8:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 80493ad:	8d 04 80             	lea    (%eax,%eax,4),%eax
 80493b0:	c1 e0 04             	shl    $0x4,%eax
 80493b3:	05 00 d8 04 08       	add    $0x804d800,%eax
 80493b8:	50                   	push   %eax
 80493b9:	e8 02 f4 ff ff       	call   80487c0 <fgets@plt>
 80493be:	89 c3                	mov    %eax,%ebx
 80493c0:	83 c4 10             	add    $0x10,%esp
 80493c3:	85 c0                	test   %eax,%eax
 80493c5:	74 10                	je     80493d7 <skip+0x3e>
 80493c7:	83 ec 0c             	sub    $0xc,%esp
 80493ca:	50                   	push   %eax
 80493cb:	e8 91 ff ff ff       	call   8049361 <blank_line>
 80493d0:	83 c4 10             	add    $0x10,%esp
 80493d3:	85 c0                	test   %eax,%eax
 80493d5:	75 c6                	jne    804939d <skip+0x4>
 80493d7:	89 d8                	mov    %ebx,%eax
 80493d9:	83 c4 08             	add    $0x8,%esp
 80493dc:	5b                   	pop    %ebx
 80493dd:	c3                   	ret    

080493de <send_msg>:
 80493de:	57                   	push   %edi
 80493df:	53                   	push   %ebx
 80493e0:	81 ec 14 40 00 00    	sub    $0x4014,%esp
 80493e6:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80493ec:	89 84 24 0c 40 00 00 	mov    %eax,0x400c(%esp)
 80493f3:	31 c0                	xor    %eax,%eax
 80493f5:	8b 1d ec d7 04 08    	mov    0x804d7ec,%ebx
 80493fb:	8d 54 9b fb          	lea    -0x5(%ebx,%ebx,4),%edx
 80493ff:	c1 e2 04             	shl    $0x4,%edx
 8049402:	81 c2 00 d8 04 08    	add    $0x804d800,%edx
 8049408:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 804940d:	89 d7                	mov    %edx,%edi
 804940f:	f2 ae                	repnz scas %es:(%edi),%al
 8049411:	f7 d1                	not    %ecx
 8049413:	83 c1 63             	add    $0x63,%ecx
 8049416:	81 f9 00 20 00 00    	cmp    $0x2000,%ecx
 804941c:	76 1b                	jbe    8049439 <send_msg+0x5b>
 804941e:	83 ec 08             	sub    $0x8,%esp
 8049421:	68 48 a5 04 08       	push   $0x804a548
 8049426:	6a 01                	push   $0x1
 8049428:	e8 b3 f4 ff ff       	call   80488e0 <__printf_chk@plt>
 804942d:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049434:	e8 37 f4 ff ff       	call   8048870 <exit@plt>
 8049439:	83 bc 24 20 40 00 00 	cmpl   $0x0,0x4020(%esp)
 8049440:	00 
 8049441:	b9 40 a6 04 08       	mov    $0x804a640,%ecx
 8049446:	b8 38 a6 04 08       	mov    $0x804a638,%eax
 804944b:	0f 44 c1             	cmove  %ecx,%eax
 804944e:	52                   	push   %edx
 804944f:	53                   	push   %ebx
 8049450:	50                   	push   %eax
 8049451:	ff 35 a0 d5 04 08    	pushl  0x804d5a0
 8049457:	68 49 a6 04 08       	push   $0x804a649
 804945c:	68 00 20 00 00       	push   $0x2000
 8049461:	6a 01                	push   $0x1
 8049463:	8d 5c 24 28          	lea    0x28(%esp),%ebx
 8049467:	53                   	push   %ebx
 8049468:	e8 f3 f4 ff ff       	call   8048960 <__sprintf_chk@plt>
 804946d:	83 c4 20             	add    $0x20,%esp
 8049470:	8d 84 24 0c 20 00 00 	lea    0x200c(%esp),%eax
 8049477:	50                   	push   %eax
 8049478:	6a 00                	push   $0x0
 804947a:	53                   	push   %ebx
 804947b:	68 a0 d1 04 08       	push   $0x804d1a0
 8049480:	e8 b0 0c 00 00       	call   804a135 <driver_post>
 8049485:	83 c4 10             	add    $0x10,%esp
 8049488:	85 c0                	test   %eax,%eax
 804948a:	79 1c                	jns    80494a8 <send_msg+0xca>
 804948c:	83 ec 0c             	sub    $0xc,%esp
 804948f:	8d 84 24 18 20 00 00 	lea    0x2018(%esp),%eax
 8049496:	50                   	push   %eax
 8049497:	e8 b4 f3 ff ff       	call   8048850 <puts@plt>
 804949c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80494a3:	e8 c8 f3 ff ff       	call   8048870 <exit@plt>
 80494a8:	8b 84 24 0c 40 00 00 	mov    0x400c(%esp),%eax
 80494af:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80494b6:	74 05                	je     80494bd <send_msg+0xdf>
 80494b8:	e8 43 f3 ff ff       	call   8048800 <__stack_chk_fail@plt>
 80494bd:	81 c4 14 40 00 00    	add    $0x4014,%esp
 80494c3:	5b                   	pop    %ebx
 80494c4:	5f                   	pop    %edi
 80494c5:	c3                   	ret    

080494c6 <explode_bomb>:
 80494c6:	83 ec 18             	sub    $0x18,%esp
 80494c9:	68 55 a6 04 08       	push   $0x804a655
 80494ce:	e8 7d f3 ff ff       	call   8048850 <puts@plt>
 80494d3:	c7 04 24 5e a6 04 08 	movl   $0x804a65e,(%esp)
 80494da:	e8 71 f3 ff ff       	call   8048850 <puts@plt>
 80494df:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80494e6:	e8 f3 fe ff ff       	call   80493de <send_msg>
 80494eb:	c7 04 24 6c a5 04 08 	movl   $0x804a56c,(%esp)
 80494f2:	e8 59 f3 ff ff       	call   8048850 <puts@plt>
 80494f7:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80494fe:	e8 6d f3 ff ff       	call   8048870 <exit@plt>

08049503 <read_six_numbers>:
 8049503:	83 ec 0c             	sub    $0xc,%esp
 8049506:	8b 44 24 14          	mov    0x14(%esp),%eax
 804950a:	8d 50 14             	lea    0x14(%eax),%edx
 804950d:	52                   	push   %edx
 804950e:	8d 50 10             	lea    0x10(%eax),%edx
 8049511:	52                   	push   %edx
 8049512:	8d 50 0c             	lea    0xc(%eax),%edx
 8049515:	52                   	push   %edx
 8049516:	8d 50 08             	lea    0x8(%eax),%edx
 8049519:	52                   	push   %edx
 804951a:	8d 50 04             	lea    0x4(%eax),%edx
 804951d:	52                   	push   %edx
 804951e:	50                   	push   %eax
 804951f:	68 75 a6 04 08       	push   $0x804a675
 8049524:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049528:	e8 83 f3 ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 804952d:	83 c4 20             	add    $0x20,%esp
 8049530:	83 f8 05             	cmp    $0x5,%eax
 8049533:	7f 05                	jg     804953a <read_six_numbers+0x37>
 8049535:	e8 8c ff ff ff       	call   80494c6 <explode_bomb>
 804953a:	83 c4 0c             	add    $0xc,%esp
 804953d:	c3                   	ret    

0804953e <read_line>:
 804953e:	57                   	push   %edi
 804953f:	56                   	push   %esi
 8049540:	53                   	push   %ebx
 8049541:	e8 53 fe ff ff       	call   8049399 <skip>
 8049546:	85 c0                	test   %eax,%eax
 8049548:	75 70                	jne    80495ba <read_line+0x7c>
 804954a:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 804954f:	39 05 f0 d7 04 08    	cmp    %eax,0x804d7f0
 8049555:	75 19                	jne    8049570 <read_line+0x32>
 8049557:	83 ec 0c             	sub    $0xc,%esp
 804955a:	68 87 a6 04 08       	push   $0x804a687
 804955f:	e8 ec f2 ff ff       	call   8048850 <puts@plt>
 8049564:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804956b:	e8 00 f3 ff ff       	call   8048870 <exit@plt>
 8049570:	83 ec 0c             	sub    $0xc,%esp
 8049573:	68 a5 a6 04 08       	push   $0x804a6a5
 8049578:	e8 b3 f2 ff ff       	call   8048830 <getenv@plt>
 804957d:	83 c4 10             	add    $0x10,%esp
 8049580:	85 c0                	test   %eax,%eax
 8049582:	74 0a                	je     804958e <read_line+0x50>
 8049584:	83 ec 0c             	sub    $0xc,%esp
 8049587:	6a 00                	push   $0x0
 8049589:	e8 e2 f2 ff ff       	call   8048870 <exit@plt>
 804958e:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 8049593:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8049598:	e8 fc fd ff ff       	call   8049399 <skip>
 804959d:	85 c0                	test   %eax,%eax
 804959f:	75 19                	jne    80495ba <read_line+0x7c>
 80495a1:	83 ec 0c             	sub    $0xc,%esp
 80495a4:	68 87 a6 04 08       	push   $0x804a687
 80495a9:	e8 a2 f2 ff ff       	call   8048850 <puts@plt>
 80495ae:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80495b5:	e8 b6 f2 ff ff       	call   8048870 <exit@plt>
 80495ba:	8b 15 ec d7 04 08    	mov    0x804d7ec,%edx
 80495c0:	8d 1c 92             	lea    (%edx,%edx,4),%ebx
 80495c3:	c1 e3 04             	shl    $0x4,%ebx
 80495c6:	81 c3 00 d8 04 08    	add    $0x804d800,%ebx
 80495cc:	b8 00 00 00 00       	mov    $0x0,%eax
 80495d1:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 80495d6:	89 df                	mov    %ebx,%edi
 80495d8:	f2 ae                	repnz scas %es:(%edi),%al
 80495da:	f7 d1                	not    %ecx
 80495dc:	83 e9 01             	sub    $0x1,%ecx
 80495df:	83 f9 4e             	cmp    $0x4e,%ecx
 80495e2:	7e 36                	jle    804961a <read_line+0xdc>
 80495e4:	83 ec 0c             	sub    $0xc,%esp
 80495e7:	68 b0 a6 04 08       	push   $0x804a6b0
 80495ec:	e8 5f f2 ff ff       	call   8048850 <puts@plt>
 80495f1:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 80495f6:	8d 50 01             	lea    0x1(%eax),%edx
 80495f9:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 80495ff:	6b c0 50             	imul   $0x50,%eax,%eax
 8049602:	05 00 d8 04 08       	add    $0x804d800,%eax
 8049607:	be cb a6 04 08       	mov    $0x804a6cb,%esi
 804960c:	b9 04 00 00 00       	mov    $0x4,%ecx
 8049611:	89 c7                	mov    %eax,%edi
 8049613:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049615:	e8 ac fe ff ff       	call   80494c6 <explode_bomb>
 804961a:	8d 04 92             	lea    (%edx,%edx,4),%eax
 804961d:	c1 e0 04             	shl    $0x4,%eax
 8049620:	c6 84 01 ff d7 04 08 	movb   $0x0,0x804d7ff(%ecx,%eax,1)
 8049627:	00 
 8049628:	83 c2 01             	add    $0x1,%edx
 804962b:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 8049631:	89 d8                	mov    %ebx,%eax
 8049633:	5b                   	pop    %ebx
 8049634:	5e                   	pop    %esi
 8049635:	5f                   	pop    %edi
 8049636:	c3                   	ret    

08049637 <phase_defused>:
 8049637:	83 ec 18             	sub    $0x18,%esp
 804963a:	6a 01                	push   $0x1
 804963c:	e8 9d fd ff ff       	call   80493de <send_msg>
 8049641:	83 c4 10             	add    $0x10,%esp
 8049644:	83 3d ec d7 04 08 09 	cmpl   $0x9,0x804d7ec
 804964b:	75 1c                	jne    8049669 <phase_defused+0x32>
 804964d:	83 ec 0c             	sub    $0xc,%esp
 8049650:	68 90 a5 04 08       	push   $0x804a590
 8049655:	e8 f6 f1 ff ff       	call   8048850 <puts@plt>
 804965a:	c7 04 24 bc a5 04 08 	movl   $0x804a5bc,(%esp)
 8049661:	e8 ea f1 ff ff       	call   8048850 <puts@plt>
 8049666:	83 c4 10             	add    $0x10,%esp
 8049669:	83 c4 0c             	add    $0xc,%esp
 804966c:	c3                   	ret    

0804966d <sigalrm_handler>:
 804966d:	83 ec 0c             	sub    $0xc,%esp
 8049670:	6a 00                	push   $0x0
 8049672:	68 c4 aa 04 08       	push   $0x804aac4
 8049677:	6a 01                	push   $0x1
 8049679:	ff 35 c0 d7 04 08    	pushl  0x804d7c0
 804967f:	e8 7c f2 ff ff       	call   8048900 <__fprintf_chk@plt>
 8049684:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804968b:	e8 e0 f1 ff ff       	call   8048870 <exit@plt>

08049690 <rio_readlineb>:
 8049690:	55                   	push   %ebp
 8049691:	57                   	push   %edi
 8049692:	56                   	push   %esi
 8049693:	53                   	push   %ebx
 8049694:	83 ec 2c             	sub    $0x2c,%esp
 8049697:	89 d7                	mov    %edx,%edi
 8049699:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 804969d:	65 8b 15 14 00 00 00 	mov    %gs:0x14,%edx
 80496a4:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 80496a8:	31 d2                	xor    %edx,%edx
 80496aa:	83 f9 01             	cmp    $0x1,%ecx
 80496ad:	76 79                	jbe    8049728 <rio_readlineb+0x98>
 80496af:	89 c3                	mov    %eax,%ebx
 80496b1:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80496b5:	bd 01 00 00 00       	mov    $0x1,%ebp
 80496ba:	8d 73 0c             	lea    0xc(%ebx),%esi
 80496bd:	eb 2d                	jmp    80496ec <rio_readlineb+0x5c>
 80496bf:	83 ec 04             	sub    $0x4,%esp
 80496c2:	68 00 20 00 00       	push   $0x2000
 80496c7:	56                   	push   %esi
 80496c8:	ff 33                	pushl  (%ebx)
 80496ca:	e8 d1 f0 ff ff       	call   80487a0 <read@plt>
 80496cf:	89 43 04             	mov    %eax,0x4(%ebx)
 80496d2:	83 c4 10             	add    $0x10,%esp
 80496d5:	85 c0                	test   %eax,%eax
 80496d7:	79 0c                	jns    80496e5 <rio_readlineb+0x55>
 80496d9:	e8 f2 f1 ff ff       	call   80488d0 <__errno_location@plt>
 80496de:	83 38 04             	cmpl   $0x4,(%eax)
 80496e1:	74 09                	je     80496ec <rio_readlineb+0x5c>
 80496e3:	eb 62                	jmp    8049747 <rio_readlineb+0xb7>
 80496e5:	85 c0                	test   %eax,%eax
 80496e7:	74 63                	je     804974c <rio_readlineb+0xbc>
 80496e9:	89 73 08             	mov    %esi,0x8(%ebx)
 80496ec:	8b 43 04             	mov    0x4(%ebx),%eax
 80496ef:	85 c0                	test   %eax,%eax
 80496f1:	7e cc                	jle    80496bf <rio_readlineb+0x2f>
 80496f3:	8b 4b 08             	mov    0x8(%ebx),%ecx
 80496f6:	0f b6 11             	movzbl (%ecx),%edx
 80496f9:	88 54 24 1b          	mov    %dl,0x1b(%esp)
 80496fd:	83 c1 01             	add    $0x1,%ecx
 8049700:	89 4b 08             	mov    %ecx,0x8(%ebx)
 8049703:	83 e8 01             	sub    $0x1,%eax
 8049706:	89 43 04             	mov    %eax,0x4(%ebx)
 8049709:	83 c7 01             	add    $0x1,%edi
 804970c:	88 57 ff             	mov    %dl,-0x1(%edi)
 804970f:	80 fa 0a             	cmp    $0xa,%dl
 8049712:	75 09                	jne    804971d <rio_readlineb+0x8d>
 8049714:	eb 1d                	jmp    8049733 <rio_readlineb+0xa3>
 8049716:	83 fd 01             	cmp    $0x1,%ebp
 8049719:	75 18                	jne    8049733 <rio_readlineb+0xa3>
 804971b:	eb 1b                	jmp    8049738 <rio_readlineb+0xa8>
 804971d:	83 c5 01             	add    $0x1,%ebp
 8049720:	3b 6c 24 08          	cmp    0x8(%esp),%ebp
 8049724:	74 09                	je     804972f <rio_readlineb+0x9f>
 8049726:	eb c4                	jmp    80496ec <rio_readlineb+0x5c>
 8049728:	bd 01 00 00 00       	mov    $0x1,%ebp
 804972d:	eb 04                	jmp    8049733 <rio_readlineb+0xa3>
 804972f:	8b 6c 24 0c          	mov    0xc(%esp),%ebp
 8049733:	c6 07 00             	movb   $0x0,(%edi)
 8049736:	89 e8                	mov    %ebp,%eax
 8049738:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804973c:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8049743:	74 17                	je     804975c <rio_readlineb+0xcc>
 8049745:	eb 10                	jmp    8049757 <rio_readlineb+0xc7>
 8049747:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804974c:	85 c0                	test   %eax,%eax
 804974e:	74 c6                	je     8049716 <rio_readlineb+0x86>
 8049750:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049755:	eb e1                	jmp    8049738 <rio_readlineb+0xa8>
 8049757:	e8 a4 f0 ff ff       	call   8048800 <__stack_chk_fail@plt>
 804975c:	83 c4 2c             	add    $0x2c,%esp
 804975f:	5b                   	pop    %ebx
 8049760:	5e                   	pop    %esi
 8049761:	5f                   	pop    %edi
 8049762:	5d                   	pop    %ebp
 8049763:	c3                   	ret    

08049764 <submitr>:
 8049764:	55                   	push   %ebp
 8049765:	57                   	push   %edi
 8049766:	56                   	push   %esi
 8049767:	53                   	push   %ebx
 8049768:	81 ec 60 a0 00 00    	sub    $0xa060,%esp
 804976e:	8b b4 24 74 a0 00 00 	mov    0xa074(%esp),%esi
 8049775:	8b 84 24 7c a0 00 00 	mov    0xa07c(%esp),%eax
 804977c:	89 44 24 10          	mov    %eax,0x10(%esp)
 8049780:	8b 84 24 80 a0 00 00 	mov    0xa080(%esp),%eax
 8049787:	89 44 24 14          	mov    %eax,0x14(%esp)
 804978b:	8b 84 24 84 a0 00 00 	mov    0xa084(%esp),%eax
 8049792:	89 44 24 18          	mov    %eax,0x18(%esp)
 8049796:	8b 9c 24 88 a0 00 00 	mov    0xa088(%esp),%ebx
 804979d:	8b 84 24 8c a0 00 00 	mov    0xa08c(%esp),%eax
 80497a4:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 80497a8:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80497ae:	89 84 24 50 a0 00 00 	mov    %eax,0xa050(%esp)
 80497b5:	31 c0                	xor    %eax,%eax
 80497b7:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80497be:	00 
 80497bf:	6a 00                	push   $0x0
 80497c1:	6a 01                	push   $0x1
 80497c3:	6a 02                	push   $0x2
 80497c5:	e8 26 f1 ff ff       	call   80488f0 <socket@plt>
 80497ca:	89 44 24 18          	mov    %eax,0x18(%esp)
 80497ce:	83 c4 10             	add    $0x10,%esp
 80497d1:	85 c0                	test   %eax,%eax
 80497d3:	79 52                	jns    8049827 <submitr+0xc3>
 80497d5:	8b 44 24 18          	mov    0x18(%esp),%eax
 80497d9:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80497df:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 80497e6:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 80497ed:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 80497f4:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 80497fb:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049802:	c7 40 18 63 72 65 61 	movl   $0x61657263,0x18(%eax)
 8049809:	c7 40 1c 74 65 20 73 	movl   $0x73206574,0x1c(%eax)
 8049810:	c7 40 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%eax)
 8049817:	66 c7 40 24 74 00    	movw   $0x74,0x24(%eax)
 804981d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049822:	e9 3f 06 00 00       	jmp    8049e66 <submitr+0x702>
 8049827:	83 ec 0c             	sub    $0xc,%esp
 804982a:	56                   	push   %esi
 804982b:	e8 e0 f0 ff ff       	call   8048910 <gethostbyname@plt>
 8049830:	83 c4 10             	add    $0x10,%esp
 8049833:	85 c0                	test   %eax,%eax
 8049835:	75 73                	jne    80498aa <submitr+0x146>
 8049837:	8b 44 24 18          	mov    0x18(%esp),%eax
 804983b:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049841:	c7 40 04 72 3a 20 44 	movl   $0x44203a72,0x4(%eax)
 8049848:	c7 40 08 4e 53 20 69 	movl   $0x6920534e,0x8(%eax)
 804984f:	c7 40 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%eax)
 8049856:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 804985d:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049864:	c7 40 18 72 65 73 6f 	movl   $0x6f736572,0x18(%eax)
 804986b:	c7 40 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%eax)
 8049872:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 8049879:	c7 40 24 65 72 20 61 	movl   $0x61207265,0x24(%eax)
 8049880:	c7 40 28 64 64 72 65 	movl   $0x65726464,0x28(%eax)
 8049887:	66 c7 40 2c 73 73    	movw   $0x7373,0x2c(%eax)
 804988d:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
 8049891:	83 ec 0c             	sub    $0xc,%esp
 8049894:	ff 74 24 14          	pushl  0x14(%esp)
 8049898:	e8 a3 f0 ff ff       	call   8048940 <close@plt>
 804989d:	83 c4 10             	add    $0x10,%esp
 80498a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80498a5:	e9 bc 05 00 00       	jmp    8049e66 <submitr+0x702>
 80498aa:	8d 74 24 30          	lea    0x30(%esp),%esi
 80498ae:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80498b5:	00 
 80498b6:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 80498bd:	00 
 80498be:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 80498c5:	00 
 80498c6:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 80498cd:	00 
 80498ce:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%esp)
 80498d5:	6a 0c                	push   $0xc
 80498d7:	ff 70 0c             	pushl  0xc(%eax)
 80498da:	8b 40 10             	mov    0x10(%eax),%eax
 80498dd:	ff 30                	pushl  (%eax)
 80498df:	8d 44 24 40          	lea    0x40(%esp),%eax
 80498e3:	50                   	push   %eax
 80498e4:	e8 77 ef ff ff       	call   8048860 <__memmove_chk@plt>
 80498e9:	0f b7 84 24 84 a0 00 	movzwl 0xa084(%esp),%eax
 80498f0:	00 
 80498f1:	66 c1 c8 08          	ror    $0x8,%ax
 80498f5:	66 89 44 24 42       	mov    %ax,0x42(%esp)
 80498fa:	83 c4 0c             	add    $0xc,%esp
 80498fd:	6a 10                	push   $0x10
 80498ff:	56                   	push   %esi
 8049900:	ff 74 24 14          	pushl  0x14(%esp)
 8049904:	e8 27 f0 ff ff       	call   8048930 <connect@plt>
 8049909:	83 c4 10             	add    $0x10,%esp
 804990c:	85 c0                	test   %eax,%eax
 804990e:	79 65                	jns    8049975 <submitr+0x211>
 8049910:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049914:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804991a:	c7 40 04 72 3a 20 55 	movl   $0x55203a72,0x4(%eax)
 8049921:	c7 40 08 6e 61 62 6c 	movl   $0x6c62616e,0x8(%eax)
 8049928:	c7 40 0c 65 20 74 6f 	movl   $0x6f742065,0xc(%eax)
 804992f:	c7 40 10 20 63 6f 6e 	movl   $0x6e6f6320,0x10(%eax)
 8049936:	c7 40 14 6e 65 63 74 	movl   $0x7463656e,0x14(%eax)
 804993d:	c7 40 18 20 74 6f 20 	movl   $0x206f7420,0x18(%eax)
 8049944:	c7 40 1c 74 68 65 20 	movl   $0x20656874,0x1c(%eax)
 804994b:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 8049952:	66 c7 40 24 65 72    	movw   $0x7265,0x24(%eax)
 8049958:	c6 40 26 00          	movb   $0x0,0x26(%eax)
 804995c:	83 ec 0c             	sub    $0xc,%esp
 804995f:	ff 74 24 14          	pushl  0x14(%esp)
 8049963:	e8 d8 ef ff ff       	call   8048940 <close@plt>
 8049968:	83 c4 10             	add    $0x10,%esp
 804996b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049970:	e9 f1 04 00 00       	jmp    8049e66 <submitr+0x702>
 8049975:	be ff ff ff ff       	mov    $0xffffffff,%esi
 804997a:	b8 00 00 00 00       	mov    $0x0,%eax
 804997f:	89 f1                	mov    %esi,%ecx
 8049981:	89 df                	mov    %ebx,%edi
 8049983:	f2 ae                	repnz scas %es:(%edi),%al
 8049985:	f7 d1                	not    %ecx
 8049987:	89 cd                	mov    %ecx,%ebp
 8049989:	89 f1                	mov    %esi,%ecx
 804998b:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 804998f:	f2 ae                	repnz scas %es:(%edi),%al
 8049991:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 8049995:	89 f1                	mov    %esi,%ecx
 8049997:	8b 7c 24 10          	mov    0x10(%esp),%edi
 804999b:	f2 ae                	repnz scas %es:(%edi),%al
 804999d:	89 ca                	mov    %ecx,%edx
 804999f:	f7 d2                	not    %edx
 80499a1:	89 f1                	mov    %esi,%ecx
 80499a3:	8b 7c 24 14          	mov    0x14(%esp),%edi
 80499a7:	f2 ae                	repnz scas %es:(%edi),%al
 80499a9:	2b 54 24 1c          	sub    0x1c(%esp),%edx
 80499ad:	29 ca                	sub    %ecx,%edx
 80499af:	8d 44 6d fd          	lea    -0x3(%ebp,%ebp,2),%eax
 80499b3:	8d 44 02 7b          	lea    0x7b(%edx,%eax,1),%eax
 80499b7:	3d 00 20 00 00       	cmp    $0x2000,%eax
 80499bc:	76 7e                	jbe    8049a3c <submitr+0x2d8>
 80499be:	8b 44 24 18          	mov    0x18(%esp),%eax
 80499c2:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80499c8:	c7 40 04 72 3a 20 52 	movl   $0x52203a72,0x4(%eax)
 80499cf:	c7 40 08 65 73 75 6c 	movl   $0x6c757365,0x8(%eax)
 80499d6:	c7 40 0c 74 20 73 74 	movl   $0x74732074,0xc(%eax)
 80499dd:	c7 40 10 72 69 6e 67 	movl   $0x676e6972,0x10(%eax)
 80499e4:	c7 40 14 20 74 6f 6f 	movl   $0x6f6f7420,0x14(%eax)
 80499eb:	c7 40 18 20 6c 61 72 	movl   $0x72616c20,0x18(%eax)
 80499f2:	c7 40 1c 67 65 2e 20 	movl   $0x202e6567,0x1c(%eax)
 80499f9:	c7 40 20 49 6e 63 72 	movl   $0x72636e49,0x20(%eax)
 8049a00:	c7 40 24 65 61 73 65 	movl   $0x65736165,0x24(%eax)
 8049a07:	c7 40 28 20 53 55 42 	movl   $0x42555320,0x28(%eax)
 8049a0e:	c7 40 2c 4d 49 54 52 	movl   $0x5254494d,0x2c(%eax)
 8049a15:	c7 40 30 5f 4d 41 58 	movl   $0x58414d5f,0x30(%eax)
 8049a1c:	c7 40 34 42 55 46 00 	movl   $0x465542,0x34(%eax)
 8049a23:	83 ec 0c             	sub    $0xc,%esp
 8049a26:	ff 74 24 14          	pushl  0x14(%esp)
 8049a2a:	e8 11 ef ff ff       	call   8048940 <close@plt>
 8049a2f:	83 c4 10             	add    $0x10,%esp
 8049a32:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049a37:	e9 2a 04 00 00       	jmp    8049e66 <submitr+0x702>
 8049a3c:	8d 94 24 4c 40 00 00 	lea    0x404c(%esp),%edx
 8049a43:	b9 00 08 00 00       	mov    $0x800,%ecx
 8049a48:	b8 00 00 00 00       	mov    $0x0,%eax
 8049a4d:	89 d7                	mov    %edx,%edi
 8049a4f:	f3 ab                	rep stos %eax,%es:(%edi)
 8049a51:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049a56:	89 df                	mov    %ebx,%edi
 8049a58:	f2 ae                	repnz scas %es:(%edi),%al
 8049a5a:	f7 d1                	not    %ecx
 8049a5c:	89 ce                	mov    %ecx,%esi
 8049a5e:	83 ee 01             	sub    $0x1,%esi
 8049a61:	0f 84 5c 04 00 00    	je     8049ec3 <submitr+0x75f>
 8049a67:	89 d5                	mov    %edx,%ebp
 8049a69:	bf d9 ff 00 00       	mov    $0xffd9,%edi
 8049a6e:	0f b6 13             	movzbl (%ebx),%edx
 8049a71:	8d 4a d6             	lea    -0x2a(%edx),%ecx
 8049a74:	b8 01 00 00 00       	mov    $0x1,%eax
 8049a79:	80 f9 0f             	cmp    $0xf,%cl
 8049a7c:	77 0a                	ja     8049a88 <submitr+0x324>
 8049a7e:	89 f8                	mov    %edi,%eax
 8049a80:	d3 e8                	shr    %cl,%eax
 8049a82:	83 f0 01             	xor    $0x1,%eax
 8049a85:	83 e0 01             	and    $0x1,%eax
 8049a88:	80 fa 5f             	cmp    $0x5f,%dl
 8049a8b:	0f 94 c1             	sete   %cl
 8049a8e:	38 c1                	cmp    %al,%cl
 8049a90:	73 0c                	jae    8049a9e <submitr+0x33a>
 8049a92:	89 d0                	mov    %edx,%eax
 8049a94:	83 e0 df             	and    $0xffffffdf,%eax
 8049a97:	83 e8 41             	sub    $0x41,%eax
 8049a9a:	3c 19                	cmp    $0x19,%al
 8049a9c:	77 08                	ja     8049aa6 <submitr+0x342>
 8049a9e:	88 55 00             	mov    %dl,0x0(%ebp)
 8049aa1:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049aa4:	eb 62                	jmp    8049b08 <submitr+0x3a4>
 8049aa6:	80 fa 20             	cmp    $0x20,%dl
 8049aa9:	75 09                	jne    8049ab4 <submitr+0x350>
 8049aab:	c6 45 00 2b          	movb   $0x2b,0x0(%ebp)
 8049aaf:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049ab2:	eb 54                	jmp    8049b08 <submitr+0x3a4>
 8049ab4:	8d 42 e0             	lea    -0x20(%edx),%eax
 8049ab7:	3c 5f                	cmp    $0x5f,%al
 8049ab9:	76 09                	jbe    8049ac4 <submitr+0x360>
 8049abb:	80 fa 09             	cmp    $0x9,%dl
 8049abe:	0f 85 bb 03 00 00    	jne    8049e7f <submitr+0x71b>
 8049ac4:	83 ec 0c             	sub    $0xc,%esp
 8049ac7:	0f b6 d2             	movzbl %dl,%edx
 8049aca:	52                   	push   %edx
 8049acb:	68 d0 ab 04 08       	push   $0x804abd0
 8049ad0:	6a 08                	push   $0x8
 8049ad2:	6a 01                	push   $0x1
 8049ad4:	8d 84 24 68 80 00 00 	lea    0x8068(%esp),%eax
 8049adb:	50                   	push   %eax
 8049adc:	e8 7f ee ff ff       	call   8048960 <__sprintf_chk@plt>
 8049ae1:	0f b6 84 24 6c 80 00 	movzbl 0x806c(%esp),%eax
 8049ae8:	00 
 8049ae9:	88 45 00             	mov    %al,0x0(%ebp)
 8049aec:	0f b6 84 24 6d 80 00 	movzbl 0x806d(%esp),%eax
 8049af3:	00 
 8049af4:	88 45 01             	mov    %al,0x1(%ebp)
 8049af7:	0f b6 84 24 6e 80 00 	movzbl 0x806e(%esp),%eax
 8049afe:	00 
 8049aff:	88 45 02             	mov    %al,0x2(%ebp)
 8049b02:	83 c4 20             	add    $0x20,%esp
 8049b05:	8d 6d 03             	lea    0x3(%ebp),%ebp
 8049b08:	83 c3 01             	add    $0x1,%ebx
 8049b0b:	83 ee 01             	sub    $0x1,%esi
 8049b0e:	0f 85 5a ff ff ff    	jne    8049a6e <submitr+0x30a>
 8049b14:	e9 aa 03 00 00       	jmp    8049ec3 <submitr+0x75f>
 8049b19:	83 ec 04             	sub    $0x4,%esp
 8049b1c:	53                   	push   %ebx
 8049b1d:	56                   	push   %esi
 8049b1e:	55                   	push   %ebp
 8049b1f:	e8 6c ed ff ff       	call   8048890 <write@plt>
 8049b24:	83 c4 10             	add    $0x10,%esp
 8049b27:	85 c0                	test   %eax,%eax
 8049b29:	7f 0f                	jg     8049b3a <submitr+0x3d6>
 8049b2b:	e8 a0 ed ff ff       	call   80488d0 <__errno_location@plt>
 8049b30:	83 38 04             	cmpl   $0x4,(%eax)
 8049b33:	75 0f                	jne    8049b44 <submitr+0x3e0>
 8049b35:	b8 00 00 00 00       	mov    $0x0,%eax
 8049b3a:	01 c6                	add    %eax,%esi
 8049b3c:	29 c3                	sub    %eax,%ebx
 8049b3e:	75 d9                	jne    8049b19 <submitr+0x3b5>
 8049b40:	85 ff                	test   %edi,%edi
 8049b42:	79 69                	jns    8049bad <submitr+0x449>
 8049b44:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049b48:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049b4e:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049b55:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049b5c:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049b63:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049b6a:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049b71:	c7 40 18 77 72 69 74 	movl   $0x74697277,0x18(%eax)
 8049b78:	c7 40 1c 65 20 74 6f 	movl   $0x6f742065,0x1c(%eax)
 8049b7f:	c7 40 20 20 74 68 65 	movl   $0x65687420,0x20(%eax)
 8049b86:	c7 40 24 20 73 65 72 	movl   $0x72657320,0x24(%eax)
 8049b8d:	c7 40 28 76 65 72 00 	movl   $0x726576,0x28(%eax)
 8049b94:	83 ec 0c             	sub    $0xc,%esp
 8049b97:	ff 74 24 14          	pushl  0x14(%esp)
 8049b9b:	e8 a0 ed ff ff       	call   8048940 <close@plt>
 8049ba0:	83 c4 10             	add    $0x10,%esp
 8049ba3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049ba8:	e9 b9 02 00 00       	jmp    8049e66 <submitr+0x702>
 8049bad:	8b 44 24 08          	mov    0x8(%esp),%eax
 8049bb1:	89 44 24 40          	mov    %eax,0x40(%esp)
 8049bb5:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 8049bbc:	00 
 8049bbd:	8d 44 24 4c          	lea    0x4c(%esp),%eax
 8049bc1:	89 44 24 48          	mov    %eax,0x48(%esp)
 8049bc5:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049bca:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049bd1:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049bd5:	e8 b6 fa ff ff       	call   8049690 <rio_readlineb>
 8049bda:	85 c0                	test   %eax,%eax
 8049bdc:	7f 7d                	jg     8049c5b <submitr+0x4f7>
 8049bde:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049be2:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049be8:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049bef:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049bf6:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049bfd:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049c04:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049c0b:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049c12:	c7 40 1c 20 66 69 72 	movl   $0x72696620,0x1c(%eax)
 8049c19:	c7 40 20 73 74 20 68 	movl   $0x68207473,0x20(%eax)
 8049c20:	c7 40 24 65 61 64 65 	movl   $0x65646165,0x24(%eax)
 8049c27:	c7 40 28 72 20 66 72 	movl   $0x72662072,0x28(%eax)
 8049c2e:	c7 40 2c 6f 6d 20 73 	movl   $0x73206d6f,0x2c(%eax)
 8049c35:	c7 40 30 65 72 76 65 	movl   $0x65767265,0x30(%eax)
 8049c3c:	66 c7 40 34 72 00    	movw   $0x72,0x34(%eax)
 8049c42:	83 ec 0c             	sub    $0xc,%esp
 8049c45:	ff 74 24 14          	pushl  0x14(%esp)
 8049c49:	e8 f2 ec ff ff       	call   8048940 <close@plt>
 8049c4e:	83 c4 10             	add    $0x10,%esp
 8049c51:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049c56:	e9 0b 02 00 00       	jmp    8049e66 <submitr+0x702>
 8049c5b:	83 ec 0c             	sub    $0xc,%esp
 8049c5e:	8d 84 24 58 80 00 00 	lea    0x8058(%esp),%eax
 8049c65:	50                   	push   %eax
 8049c66:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 8049c6a:	50                   	push   %eax
 8049c6b:	8d 84 24 60 60 00 00 	lea    0x6060(%esp),%eax
 8049c72:	50                   	push   %eax
 8049c73:	68 d7 ab 04 08       	push   $0x804abd7
 8049c78:	8d 84 24 68 20 00 00 	lea    0x2068(%esp),%eax
 8049c7f:	50                   	push   %eax
 8049c80:	e8 2b ec ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8049c85:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 8049c89:	83 c4 20             	add    $0x20,%esp
 8049c8c:	3d c8 00 00 00       	cmp    $0xc8,%eax
 8049c91:	0f 84 c4 00 00 00    	je     8049d5b <submitr+0x5f7>
 8049c97:	83 ec 08             	sub    $0x8,%esp
 8049c9a:	8d 94 24 54 80 00 00 	lea    0x8054(%esp),%edx
 8049ca1:	52                   	push   %edx
 8049ca2:	50                   	push   %eax
 8049ca3:	68 e8 aa 04 08       	push   $0x804aae8
 8049ca8:	6a ff                	push   $0xffffffff
 8049caa:	6a 01                	push   $0x1
 8049cac:	ff 74 24 34          	pushl  0x34(%esp)
 8049cb0:	e8 ab ec ff ff       	call   8048960 <__sprintf_chk@plt>
 8049cb5:	83 c4 14             	add    $0x14,%esp
 8049cb8:	ff 74 24 14          	pushl  0x14(%esp)
 8049cbc:	e8 7f ec ff ff       	call   8048940 <close@plt>
 8049cc1:	83 c4 10             	add    $0x10,%esp
 8049cc4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049cc9:	e9 98 01 00 00       	jmp    8049e66 <submitr+0x702>
 8049cce:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049cd3:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049cda:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049cde:	e8 ad f9 ff ff       	call   8049690 <rio_readlineb>
 8049ce3:	85 c0                	test   %eax,%eax
 8049ce5:	7f 74                	jg     8049d5b <submitr+0x5f7>
 8049ce7:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049ceb:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049cf1:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049cf8:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049cff:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049d06:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049d0d:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049d14:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049d1b:	c7 40 1c 20 68 65 61 	movl   $0x61656820,0x1c(%eax)
 8049d22:	c7 40 20 64 65 72 73 	movl   $0x73726564,0x20(%eax)
 8049d29:	c7 40 24 20 66 72 6f 	movl   $0x6f726620,0x24(%eax)
 8049d30:	c7 40 28 6d 20 73 65 	movl   $0x6573206d,0x28(%eax)
 8049d37:	c7 40 2c 72 76 65 72 	movl   $0x72657672,0x2c(%eax)
 8049d3e:	c6 40 30 00          	movb   $0x0,0x30(%eax)
 8049d42:	83 ec 0c             	sub    $0xc,%esp
 8049d45:	ff 74 24 14          	pushl  0x14(%esp)
 8049d49:	e8 f2 eb ff ff       	call   8048940 <close@plt>
 8049d4e:	83 c4 10             	add    $0x10,%esp
 8049d51:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049d56:	e9 0b 01 00 00       	jmp    8049e66 <submitr+0x702>
 8049d5b:	80 bc 24 4c 20 00 00 	cmpb   $0xd,0x204c(%esp)
 8049d62:	0d 
 8049d63:	0f 85 65 ff ff ff    	jne    8049cce <submitr+0x56a>
 8049d69:	80 bc 24 4d 20 00 00 	cmpb   $0xa,0x204d(%esp)
 8049d70:	0a 
 8049d71:	0f 85 57 ff ff ff    	jne    8049cce <submitr+0x56a>
 8049d77:	80 bc 24 4e 20 00 00 	cmpb   $0x0,0x204e(%esp)
 8049d7e:	00 
 8049d7f:	0f 85 49 ff ff ff    	jne    8049cce <submitr+0x56a>
 8049d85:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049d8a:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049d91:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049d95:	e8 f6 f8 ff ff       	call   8049690 <rio_readlineb>
 8049d9a:	85 c0                	test   %eax,%eax
 8049d9c:	7f 7b                	jg     8049e19 <submitr+0x6b5>
 8049d9e:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049da2:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049da8:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049daf:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049db6:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049dbd:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049dc4:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049dcb:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049dd2:	c7 40 1c 20 73 74 61 	movl   $0x61747320,0x1c(%eax)
 8049dd9:	c7 40 20 74 75 73 20 	movl   $0x20737574,0x20(%eax)
 8049de0:	c7 40 24 6d 65 73 73 	movl   $0x7373656d,0x24(%eax)
 8049de7:	c7 40 28 61 67 65 20 	movl   $0x20656761,0x28(%eax)
 8049dee:	c7 40 2c 66 72 6f 6d 	movl   $0x6d6f7266,0x2c(%eax)
 8049df5:	c7 40 30 20 73 65 72 	movl   $0x72657320,0x30(%eax)
 8049dfc:	c7 40 34 76 65 72 00 	movl   $0x726576,0x34(%eax)
 8049e03:	83 ec 0c             	sub    $0xc,%esp
 8049e06:	ff 74 24 14          	pushl  0x14(%esp)
 8049e0a:	e8 31 eb ff ff       	call   8048940 <close@plt>
 8049e0f:	83 c4 10             	add    $0x10,%esp
 8049e12:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049e17:	eb 4d                	jmp    8049e66 <submitr+0x702>
 8049e19:	83 ec 08             	sub    $0x8,%esp
 8049e1c:	8d 84 24 54 20 00 00 	lea    0x2054(%esp),%eax
 8049e23:	50                   	push   %eax
 8049e24:	8b 7c 24 24          	mov    0x24(%esp),%edi
 8049e28:	57                   	push   %edi
 8049e29:	e8 e2 e9 ff ff       	call   8048810 <strcpy@plt>
 8049e2e:	83 c4 04             	add    $0x4,%esp
 8049e31:	ff 74 24 14          	pushl  0x14(%esp)
 8049e35:	e8 06 eb ff ff       	call   8048940 <close@plt>
 8049e3a:	0f b6 17             	movzbl (%edi),%edx
 8049e3d:	b8 4f 00 00 00       	mov    $0x4f,%eax
 8049e42:	83 c4 10             	add    $0x10,%esp
 8049e45:	29 d0                	sub    %edx,%eax
 8049e47:	75 13                	jne    8049e5c <submitr+0x6f8>
 8049e49:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 8049e4d:	b8 4b 00 00 00       	mov    $0x4b,%eax
 8049e52:	29 d0                	sub    %edx,%eax
 8049e54:	75 06                	jne    8049e5c <submitr+0x6f8>
 8049e56:	0f b6 47 02          	movzbl 0x2(%edi),%eax
 8049e5a:	f7 d8                	neg    %eax
 8049e5c:	85 c0                	test   %eax,%eax
 8049e5e:	0f 95 c0             	setne  %al
 8049e61:	0f b6 c0             	movzbl %al,%eax
 8049e64:	f7 d8                	neg    %eax
 8049e66:	8b bc 24 4c a0 00 00 	mov    0xa04c(%esp),%edi
 8049e6d:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8049e74:	0f 84 a9 00 00 00    	je     8049f23 <submitr+0x7bf>
 8049e7a:	e9 9f 00 00 00       	jmp    8049f1e <submitr+0x7ba>
 8049e7f:	a1 18 ab 04 08       	mov    0x804ab18,%eax
 8049e84:	8b 7c 24 18          	mov    0x18(%esp),%edi
 8049e88:	89 07                	mov    %eax,(%edi)
 8049e8a:	a1 57 ab 04 08       	mov    0x804ab57,%eax
 8049e8f:	89 47 3f             	mov    %eax,0x3f(%edi)
 8049e92:	89 f8                	mov    %edi,%eax
 8049e94:	83 c7 04             	add    $0x4,%edi
 8049e97:	83 e7 fc             	and    $0xfffffffc,%edi
 8049e9a:	29 f8                	sub    %edi,%eax
 8049e9c:	be 18 ab 04 08       	mov    $0x804ab18,%esi
 8049ea1:	29 c6                	sub    %eax,%esi
 8049ea3:	83 c0 43             	add    $0x43,%eax
 8049ea6:	c1 e8 02             	shr    $0x2,%eax
 8049ea9:	89 c1                	mov    %eax,%ecx
 8049eab:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049ead:	83 ec 0c             	sub    $0xc,%esp
 8049eb0:	ff 74 24 14          	pushl  0x14(%esp)
 8049eb4:	e8 87 ea ff ff       	call   8048940 <close@plt>
 8049eb9:	83 c4 10             	add    $0x10,%esp
 8049ebc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049ec1:	eb a3                	jmp    8049e66 <submitr+0x702>
 8049ec3:	8d 84 24 4c 40 00 00 	lea    0x404c(%esp),%eax
 8049eca:	50                   	push   %eax
 8049ecb:	ff 74 24 18          	pushl  0x18(%esp)
 8049ecf:	ff 74 24 18          	pushl  0x18(%esp)
 8049ed3:	ff 74 24 18          	pushl  0x18(%esp)
 8049ed7:	68 5c ab 04 08       	push   $0x804ab5c
 8049edc:	68 00 20 00 00       	push   $0x2000
 8049ee1:	6a 01                	push   $0x1
 8049ee3:	8d bc 24 68 20 00 00 	lea    0x2068(%esp),%edi
 8049eea:	57                   	push   %edi
 8049eeb:	e8 70 ea ff ff       	call   8048960 <__sprintf_chk@plt>
 8049ef0:	b8 00 00 00 00       	mov    $0x0,%eax
 8049ef5:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049efa:	f2 ae                	repnz scas %es:(%edi),%al
 8049efc:	f7 d1                	not    %ecx
 8049efe:	8d 79 ff             	lea    -0x1(%ecx),%edi
 8049f01:	83 c4 20             	add    $0x20,%esp
 8049f04:	89 fb                	mov    %edi,%ebx
 8049f06:	8d b4 24 4c 20 00 00 	lea    0x204c(%esp),%esi
 8049f0d:	8b 6c 24 08          	mov    0x8(%esp),%ebp
 8049f11:	85 ff                	test   %edi,%edi
 8049f13:	0f 85 00 fc ff ff    	jne    8049b19 <submitr+0x3b5>
 8049f19:	e9 8f fc ff ff       	jmp    8049bad <submitr+0x449>
 8049f1e:	e8 dd e8 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049f23:	81 c4 5c a0 00 00    	add    $0xa05c,%esp
 8049f29:	5b                   	pop    %ebx
 8049f2a:	5e                   	pop    %esi
 8049f2b:	5f                   	pop    %edi
 8049f2c:	5d                   	pop    %ebp
 8049f2d:	c3                   	ret    

08049f2e <init_timeout>:
 8049f2e:	53                   	push   %ebx
 8049f2f:	83 ec 08             	sub    $0x8,%esp
 8049f32:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049f36:	85 db                	test   %ebx,%ebx
 8049f38:	74 24                	je     8049f5e <init_timeout+0x30>
 8049f3a:	83 ec 08             	sub    $0x8,%esp
 8049f3d:	68 6d 96 04 08       	push   $0x804966d
 8049f42:	6a 0e                	push   $0xe
 8049f44:	e8 87 e8 ff ff       	call   80487d0 <signal@plt>
 8049f49:	85 db                	test   %ebx,%ebx
 8049f4b:	b8 00 00 00 00       	mov    $0x0,%eax
 8049f50:	0f 48 d8             	cmovs  %eax,%ebx
 8049f53:	89 1c 24             	mov    %ebx,(%esp)
 8049f56:	e8 95 e8 ff ff       	call   80487f0 <alarm@plt>
 8049f5b:	83 c4 10             	add    $0x10,%esp
 8049f5e:	83 c4 08             	add    $0x8,%esp
 8049f61:	5b                   	pop    %ebx
 8049f62:	c3                   	ret    

08049f63 <init_driver>:
 8049f63:	57                   	push   %edi
 8049f64:	56                   	push   %esi
 8049f65:	53                   	push   %ebx
 8049f66:	83 ec 28             	sub    $0x28,%esp
 8049f69:	8b 74 24 38          	mov    0x38(%esp),%esi
 8049f6d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049f73:	89 44 24 24          	mov    %eax,0x24(%esp)
 8049f77:	31 c0                	xor    %eax,%eax
 8049f79:	6a 01                	push   $0x1
 8049f7b:	6a 0d                	push   $0xd
 8049f7d:	e8 4e e8 ff ff       	call   80487d0 <signal@plt>
 8049f82:	83 c4 08             	add    $0x8,%esp
 8049f85:	6a 01                	push   $0x1
 8049f87:	6a 1d                	push   $0x1d
 8049f89:	e8 42 e8 ff ff       	call   80487d0 <signal@plt>
 8049f8e:	83 c4 08             	add    $0x8,%esp
 8049f91:	6a 01                	push   $0x1
 8049f93:	6a 1d                	push   $0x1d
 8049f95:	e8 36 e8 ff ff       	call   80487d0 <signal@plt>
 8049f9a:	83 c4 0c             	add    $0xc,%esp
 8049f9d:	6a 00                	push   $0x0
 8049f9f:	6a 01                	push   $0x1
 8049fa1:	6a 02                	push   $0x2
 8049fa3:	e8 48 e9 ff ff       	call   80488f0 <socket@plt>
 8049fa8:	83 c4 10             	add    $0x10,%esp
 8049fab:	85 c0                	test   %eax,%eax
 8049fad:	79 4e                	jns    8049ffd <init_driver+0x9a>
 8049faf:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049fb5:	c7 46 04 72 3a 20 43 	movl   $0x43203a72,0x4(%esi)
 8049fbc:	c7 46 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%esi)
 8049fc3:	c7 46 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%esi)
 8049fca:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049fd1:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049fd8:	c7 46 18 63 72 65 61 	movl   $0x61657263,0x18(%esi)
 8049fdf:	c7 46 1c 74 65 20 73 	movl   $0x73206574,0x1c(%esi)
 8049fe6:	c7 46 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%esi)
 8049fed:	66 c7 46 24 74 00    	movw   $0x74,0x24(%esi)
 8049ff3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049ff8:	e9 1f 01 00 00       	jmp    804a11c <init_driver+0x1b9>
 8049ffd:	89 c3                	mov    %eax,%ebx
 8049fff:	83 ec 0c             	sub    $0xc,%esp
 804a002:	68 e8 ab 04 08       	push   $0x804abe8
 804a007:	e8 04 e9 ff ff       	call   8048910 <gethostbyname@plt>
 804a00c:	83 c4 10             	add    $0x10,%esp
 804a00f:	85 c0                	test   %eax,%eax
 804a011:	75 6c                	jne    804a07f <init_driver+0x11c>
 804a013:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 804a019:	c7 46 04 72 3a 20 44 	movl   $0x44203a72,0x4(%esi)
 804a020:	c7 46 08 4e 53 20 69 	movl   $0x6920534e,0x8(%esi)
 804a027:	c7 46 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%esi)
 804a02e:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 804a035:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 804a03c:	c7 46 18 72 65 73 6f 	movl   $0x6f736572,0x18(%esi)
 804a043:	c7 46 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%esi)
 804a04a:	c7 46 20 73 65 72 76 	movl   $0x76726573,0x20(%esi)
 804a051:	c7 46 24 65 72 20 61 	movl   $0x61207265,0x24(%esi)
 804a058:	c7 46 28 64 64 72 65 	movl   $0x65726464,0x28(%esi)
 804a05f:	66 c7 46 2c 73 73    	movw   $0x7373,0x2c(%esi)
 804a065:	c6 46 2e 00          	movb   $0x0,0x2e(%esi)
 804a069:	83 ec 0c             	sub    $0xc,%esp
 804a06c:	53                   	push   %ebx
 804a06d:	e8 ce e8 ff ff       	call   8048940 <close@plt>
 804a072:	83 c4 10             	add    $0x10,%esp
 804a075:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a07a:	e9 9d 00 00 00       	jmp    804a11c <init_driver+0x1b9>
 804a07f:	8d 7c 24 0c          	lea    0xc(%esp),%edi
 804a083:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804a08a:	00 
 804a08b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804a092:	00 
 804a093:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804a09a:	00 
 804a09b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a0a2:	00 
 804a0a3:	66 c7 44 24 0c 02 00 	movw   $0x2,0xc(%esp)
 804a0aa:	6a 0c                	push   $0xc
 804a0ac:	ff 70 0c             	pushl  0xc(%eax)
 804a0af:	8b 40 10             	mov    0x10(%eax),%eax
 804a0b2:	ff 30                	pushl  (%eax)
 804a0b4:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 804a0b8:	50                   	push   %eax
 804a0b9:	e8 a2 e7 ff ff       	call   8048860 <__memmove_chk@plt>
 804a0be:	66 c7 44 24 1e 43 31 	movw   $0x3143,0x1e(%esp)
 804a0c5:	83 c4 0c             	add    $0xc,%esp
 804a0c8:	6a 10                	push   $0x10
 804a0ca:	57                   	push   %edi
 804a0cb:	53                   	push   %ebx
 804a0cc:	e8 5f e8 ff ff       	call   8048930 <connect@plt>
 804a0d1:	83 c4 10             	add    $0x10,%esp
 804a0d4:	85 c0                	test   %eax,%eax
 804a0d6:	79 2a                	jns    804a102 <init_driver+0x19f>
 804a0d8:	83 ec 0c             	sub    $0xc,%esp
 804a0db:	68 e8 ab 04 08       	push   $0x804abe8
 804a0e0:	68 a8 ab 04 08       	push   $0x804aba8
 804a0e5:	6a ff                	push   $0xffffffff
 804a0e7:	6a 01                	push   $0x1
 804a0e9:	56                   	push   %esi
 804a0ea:	e8 71 e8 ff ff       	call   8048960 <__sprintf_chk@plt>
 804a0ef:	83 c4 14             	add    $0x14,%esp
 804a0f2:	53                   	push   %ebx
 804a0f3:	e8 48 e8 ff ff       	call   8048940 <close@plt>
 804a0f8:	83 c4 10             	add    $0x10,%esp
 804a0fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a100:	eb 1a                	jmp    804a11c <init_driver+0x1b9>
 804a102:	83 ec 0c             	sub    $0xc,%esp
 804a105:	53                   	push   %ebx
 804a106:	e8 35 e8 ff ff       	call   8048940 <close@plt>
 804a10b:	66 c7 06 4f 4b       	movw   $0x4b4f,(%esi)
 804a110:	c6 46 02 00          	movb   $0x0,0x2(%esi)
 804a114:	83 c4 10             	add    $0x10,%esp
 804a117:	b8 00 00 00 00       	mov    $0x0,%eax
 804a11c:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804a120:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804a127:	74 05                	je     804a12e <init_driver+0x1cb>
 804a129:	e8 d2 e6 ff ff       	call   8048800 <__stack_chk_fail@plt>
 804a12e:	83 c4 20             	add    $0x20,%esp
 804a131:	5b                   	pop    %ebx
 804a132:	5e                   	pop    %esi
 804a133:	5f                   	pop    %edi
 804a134:	c3                   	ret    

0804a135 <driver_post>:
 804a135:	53                   	push   %ebx
 804a136:	83 ec 08             	sub    $0x8,%esp
 804a139:	8b 44 24 10          	mov    0x10(%esp),%eax
 804a13d:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 804a141:	83 7c 24 18 00       	cmpl   $0x0,0x18(%esp)
 804a146:	74 26                	je     804a16e <driver_post+0x39>
 804a148:	83 ec 04             	sub    $0x4,%esp
 804a14b:	ff 74 24 18          	pushl  0x18(%esp)
 804a14f:	68 fd ab 04 08       	push   $0x804abfd
 804a154:	6a 01                	push   $0x1
 804a156:	e8 85 e7 ff ff       	call   80488e0 <__printf_chk@plt>
 804a15b:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a160:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a164:	83 c4 10             	add    $0x10,%esp
 804a167:	b8 00 00 00 00       	mov    $0x0,%eax
 804a16c:	eb 3e                	jmp    804a1ac <driver_post+0x77>
 804a16e:	85 c0                	test   %eax,%eax
 804a170:	74 2c                	je     804a19e <driver_post+0x69>
 804a172:	80 38 00             	cmpb   $0x0,(%eax)
 804a175:	74 27                	je     804a19e <driver_post+0x69>
 804a177:	83 ec 04             	sub    $0x4,%esp
 804a17a:	53                   	push   %ebx
 804a17b:	ff 74 24 1c          	pushl  0x1c(%esp)
 804a17f:	68 14 ac 04 08       	push   $0x804ac14
 804a184:	50                   	push   %eax
 804a185:	68 1b ac 04 08       	push   $0x804ac1b
 804a18a:	68 31 43 00 00       	push   $0x4331
 804a18f:	68 e8 ab 04 08       	push   $0x804abe8
 804a194:	e8 cb f5 ff ff       	call   8049764 <submitr>
 804a199:	83 c4 20             	add    $0x20,%esp
 804a19c:	eb 0e                	jmp    804a1ac <driver_post+0x77>
 804a19e:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a1a3:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a1a7:	b8 00 00 00 00       	mov    $0x0,%eax
 804a1ac:	83 c4 08             	add    $0x8,%esp
 804a1af:	5b                   	pop    %ebx
 804a1b0:	c3                   	ret    
 804a1b1:	66 90                	xchg   %ax,%ax
 804a1b3:	66 90                	xchg   %ax,%ax
 804a1b5:	66 90                	xchg   %ax,%ax
 804a1b7:	66 90                	xchg   %ax,%ax
 804a1b9:	66 90                	xchg   %ax,%ax
 804a1bb:	66 90                	xchg   %ax,%ax
 804a1bd:	66 90                	xchg   %ax,%ax
 804a1bf:	90                   	nop

0804a1c0 <__libc_csu_init>:
 804a1c0:	55                   	push   %ebp
 804a1c1:	57                   	push   %edi
 804a1c2:	56                   	push   %esi
 804a1c3:	53                   	push   %ebx
 804a1c4:	e8 e7 e7 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a1c9:	81 c3 37 2e 00 00    	add    $0x2e37,%ebx
 804a1cf:	83 ec 0c             	sub    $0xc,%esp
 804a1d2:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 804a1d6:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804a1dc:	e8 7f e5 ff ff       	call   8048760 <_init>
 804a1e1:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 804a1e7:	29 c6                	sub    %eax,%esi
 804a1e9:	c1 fe 02             	sar    $0x2,%esi
 804a1ec:	85 f6                	test   %esi,%esi
 804a1ee:	74 25                	je     804a215 <__libc_csu_init+0x55>
 804a1f0:	31 ff                	xor    %edi,%edi
 804a1f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a1f8:	83 ec 04             	sub    $0x4,%esp
 804a1fb:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a1ff:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a203:	55                   	push   %ebp
 804a204:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804a20b:	83 c7 01             	add    $0x1,%edi
 804a20e:	83 c4 10             	add    $0x10,%esp
 804a211:	39 f7                	cmp    %esi,%edi
 804a213:	75 e3                	jne    804a1f8 <__libc_csu_init+0x38>
 804a215:	83 c4 0c             	add    $0xc,%esp
 804a218:	5b                   	pop    %ebx
 804a219:	5e                   	pop    %esi
 804a21a:	5f                   	pop    %edi
 804a21b:	5d                   	pop    %ebp
 804a21c:	c3                   	ret    
 804a21d:	8d 76 00             	lea    0x0(%esi),%esi

0804a220 <__libc_csu_fini>:
 804a220:	f3 c3                	repz ret 

Disassembly of section .fini:

0804a224 <_fini>:
 804a224:	53                   	push   %ebx
 804a225:	83 ec 08             	sub    $0x8,%esp
 804a228:	e8 83 e7 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a22d:	81 c3 d3 2d 00 00    	add    $0x2dd3,%ebx
 804a233:	83 c4 08             	add    $0x8,%esp
 804a236:	5b                   	pop    %ebx
 804a237:	c3                   	ret    
